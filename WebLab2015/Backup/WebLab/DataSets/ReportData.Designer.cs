//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WebLab.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ReportData")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ReportData : global::System.Data.DataSet {
        
        private Report_TableDataTable tableReport_Table;
        
        private Report_Table2DataTable tableReport_Table2;
        
        private Report_HeaderDataTable tableReport_Header;
        
        private Report_FormatDataTable tableReport_Format;
        
        private CultureResultDataTable tableCultureResult;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReportData() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ReportData(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Report Table"] != null)) {
                    base.Tables.Add(new Report_TableDataTable(ds.Tables["Report Table"]));
                }
                if ((ds.Tables["Report_Table2"] != null)) {
                    base.Tables.Add(new Report_Table2DataTable(ds.Tables["Report_Table2"]));
                }
                if ((ds.Tables["Report_Header"] != null)) {
                    base.Tables.Add(new Report_HeaderDataTable(ds.Tables["Report_Header"]));
                }
                if ((ds.Tables["Report_Format"] != null)) {
                    base.Tables.Add(new Report_FormatDataTable(ds.Tables["Report_Format"]));
                }
                if ((ds.Tables["CultureResult"] != null)) {
                    base.Tables.Add(new CultureResultDataTable(ds.Tables["CultureResult"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Report_TableDataTable Report_Table {
            get {
                return this.tableReport_Table;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Report_Table2DataTable Report_Table2 {
            get {
                return this.tableReport_Table2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Report_HeaderDataTable Report_Header {
            get {
                return this.tableReport_Header;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Report_FormatDataTable Report_Format {
            get {
                return this.tableReport_Format;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CultureResultDataTable CultureResult {
            get {
                return this.tableCultureResult;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ReportData cln = ((ReportData)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Report Table"] != null)) {
                    base.Tables.Add(new Report_TableDataTable(ds.Tables["Report Table"]));
                }
                if ((ds.Tables["Report_Table2"] != null)) {
                    base.Tables.Add(new Report_Table2DataTable(ds.Tables["Report_Table2"]));
                }
                if ((ds.Tables["Report_Header"] != null)) {
                    base.Tables.Add(new Report_HeaderDataTable(ds.Tables["Report_Header"]));
                }
                if ((ds.Tables["Report_Format"] != null)) {
                    base.Tables.Add(new Report_FormatDataTable(ds.Tables["Report_Format"]));
                }
                if ((ds.Tables["CultureResult"] != null)) {
                    base.Tables.Add(new CultureResultDataTable(ds.Tables["CultureResult"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableReport_Table = ((Report_TableDataTable)(base.Tables["Report Table"]));
            if ((initTable == true)) {
                if ((this.tableReport_Table != null)) {
                    this.tableReport_Table.InitVars();
                }
            }
            this.tableReport_Table2 = ((Report_Table2DataTable)(base.Tables["Report_Table2"]));
            if ((initTable == true)) {
                if ((this.tableReport_Table2 != null)) {
                    this.tableReport_Table2.InitVars();
                }
            }
            this.tableReport_Header = ((Report_HeaderDataTable)(base.Tables["Report_Header"]));
            if ((initTable == true)) {
                if ((this.tableReport_Header != null)) {
                    this.tableReport_Header.InitVars();
                }
            }
            this.tableReport_Format = ((Report_FormatDataTable)(base.Tables["Report_Format"]));
            if ((initTable == true)) {
                if ((this.tableReport_Format != null)) {
                    this.tableReport_Format.InitVars();
                }
            }
            this.tableCultureResult = ((CultureResultDataTable)(base.Tables["CultureResult"]));
            if ((initTable == true)) {
                if ((this.tableCultureResult != null)) {
                    this.tableCultureResult.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ReportData";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ReportData.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableReport_Table = new Report_TableDataTable();
            base.Tables.Add(this.tableReport_Table);
            this.tableReport_Table2 = new Report_Table2DataTable();
            base.Tables.Add(this.tableReport_Table2);
            this.tableReport_Header = new Report_HeaderDataTable();
            base.Tables.Add(this.tableReport_Header);
            this.tableReport_Format = new Report_FormatDataTable();
            base.Tables.Add(this.tableReport_Format);
            this.tableCultureResult = new CultureResultDataTable();
            base.Tables.Add(this.tableCultureResult);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReport_Table() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReport_Table2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReport_Header() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReport_Format() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCultureResult() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ReportData ds = new ReportData();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void Report_TableRowChangeEventHandler(object sender, Report_TableRowChangeEvent e);
        
        public delegate void Report_Table2RowChangeEventHandler(object sender, Report_Table2RowChangeEvent e);
        
        public delegate void Report_HeaderRowChangeEventHandler(object sender, Report_HeaderRowChangeEvent e);
        
        public delegate void Report_FormatRowChangeEventHandler(object sender, Report_FormatRowChangeEvent e);
        
        public delegate void CultureResultRowChangeEventHandler(object sender, CultureResultRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Report_TableDataTable : global::System.Data.TypedTableBase<Report_TableRow> {
            
            private global::System.Data.DataColumn columncodepk;
            
            private global::System.Data.DataColumn columnprintpos;
            
            private global::System.Data.DataColumn columnbooksno;
            
            private global::System.Data.DataColumn columnhcodepos;
            
            private global::System.Data.DataColumn columnsno;
            
            private global::System.Data.DataColumn columntestcode;
            
            private global::System.Data.DataColumn columncultsno;
            
            private global::System.Data.DataColumn columnlabno;
            
            private global::System.Data.DataColumn columnhcode;
            
            private global::System.Data.DataColumn columnhcodesno;
            
            private global::System.Data.DataColumn columnHName;
            
            private global::System.Data.DataColumn columngrpcode;
            
            private global::System.Data.DataColumn columngrpname;
            
            private global::System.Data.DataColumn columntname;
            
            private global::System.Data.DataColumn columnunits;
            
            private global::System.Data.DataColumn columnNORANGE;
            
            private global::System.Data.DataColumn columnLBOUND;
            
            private global::System.Data.DataColumn columnUBOUND;
            
            private global::System.Data.DataColumn columnRow1;
            
            private global::System.Data.DataColumn columnRow2;
            
            private global::System.Data.DataColumn columnRow3;
            
            private global::System.Data.DataColumn columnRow4;
            
            private global::System.Data.DataColumn columnRow5;
            
            private global::System.Data.DataColumn columnRow6;
            
            private global::System.Data.DataColumn columnRow7;
            
            private global::System.Data.DataColumn columnRow1val1;
            
            private global::System.Data.DataColumn columnRow1val2;
            
            private global::System.Data.DataColumn columnRow1val3;
            
            private global::System.Data.DataColumn columnRow1val4;
            
            private global::System.Data.DataColumn columnRow1val5;
            
            private global::System.Data.DataColumn columnRow1val6;
            
            private global::System.Data.DataColumn columnRow2val1;
            
            private global::System.Data.DataColumn columnRow2val2;
            
            private global::System.Data.DataColumn columnRow2val3;
            
            private global::System.Data.DataColumn columnRow2val4;
            
            private global::System.Data.DataColumn columnRow2val5;
            
            private global::System.Data.DataColumn columnRow2val6;
            
            private global::System.Data.DataColumn columnRow3val1;
            
            private global::System.Data.DataColumn columnRow3val2;
            
            private global::System.Data.DataColumn columnRow3val3;
            
            private global::System.Data.DataColumn columnRow3val4;
            
            private global::System.Data.DataColumn columnRow3val5;
            
            private global::System.Data.DataColumn columnRow3val6;
            
            private global::System.Data.DataColumn columnRow4val1;
            
            private global::System.Data.DataColumn columnRow4val2;
            
            private global::System.Data.DataColumn columnRow4val3;
            
            private global::System.Data.DataColumn columnRow4val4;
            
            private global::System.Data.DataColumn columnRow4val5;
            
            private global::System.Data.DataColumn columnRow4val6;
            
            private global::System.Data.DataColumn columnRow5val1;
            
            private global::System.Data.DataColumn columnRow5val2;
            
            private global::System.Data.DataColumn columnRow5val3;
            
            private global::System.Data.DataColumn columnRow5val4;
            
            private global::System.Data.DataColumn columnRow5val5;
            
            private global::System.Data.DataColumn columnRow5val6;
            
            private global::System.Data.DataColumn columnRow6val1;
            
            private global::System.Data.DataColumn columnRow6val2;
            
            private global::System.Data.DataColumn columnRow6val3;
            
            private global::System.Data.DataColumn columnRow6val4;
            
            private global::System.Data.DataColumn columnRow6val5;
            
            private global::System.Data.DataColumn columnRow6val6;
            
            private global::System.Data.DataColumn columnRow7val1;
            
            private global::System.Data.DataColumn columnRow7val2;
            
            private global::System.Data.DataColumn columnRow7val3;
            
            private global::System.Data.DataColumn columnRow7val4;
            
            private global::System.Data.DataColumn columnRow7val5;
            
            private global::System.Data.DataColumn columnRow7val6;
            
            private global::System.Data.DataColumn columntval;
            
            private global::System.Data.DataColumn columncomments;
            
            private global::System.Data.DataColumn columnINTP;
            
            private global::System.Data.DataColumn columnSIGN;
            
            private global::System.Data.DataColumn columnEOR;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnRemrep;
            
            private global::System.Data.DataColumn columnIFINTP;
            
            private global::System.Data.DataColumn columnIFCOMM;
            
            private global::System.Data.DataColumn columnabnormal;
            
            private global::System.Data.DataColumn columnHEADVAL;
            
            private global::System.Data.DataColumn columnTYP;
            
            private global::System.Data.DataColumn columnmed1;
            
            private global::System.Data.DataColumn columnmed2;
            
            private global::System.Data.DataColumn columnmed3;
            
            private global::System.Data.DataColumn columnsenst;
            
            private global::System.Data.DataColumn columnBookedunder;
            
            private global::System.Data.DataColumn columnREPWNHD;
            
            private global::System.Data.DataColumn columnREPWNFT;
            
            private global::System.Data.DataColumn columnShowRow1;
            
            private global::System.Data.DataColumn columnShowRow2;
            
            private global::System.Data.DataColumn columnShowRow3;
            
            private global::System.Data.DataColumn columnShowRow4;
            
            private global::System.Data.DataColumn columnShowRow5;
            
            private global::System.Data.DataColumn columnShowRow6;
            
            private global::System.Data.DataColumn columnShowRow7;
            
            private global::System.Data.DataColumn columnPrevType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_TableDataTable() {
                this.TableName = "Report Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Report_TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Report_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codepkColumn {
                get {
                    return this.columncodepk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn printposColumn {
                get {
                    return this.columnprintpos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn booksnoColumn {
                get {
                    return this.columnbooksno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hcodeposColumn {
                get {
                    return this.columnhcodepos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn snoColumn {
                get {
                    return this.columnsno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn testcodeColumn {
                get {
                    return this.columntestcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cultsnoColumn {
                get {
                    return this.columncultsno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn labnoColumn {
                get {
                    return this.columnlabno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hcodeColumn {
                get {
                    return this.columnhcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hcodesnoColumn {
                get {
                    return this.columnhcodesno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HNameColumn {
                get {
                    return this.columnHName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn grpcodeColumn {
                get {
                    return this.columngrpcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn grpnameColumn {
                get {
                    return this.columngrpname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tnameColumn {
                get {
                    return this.columntname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unitsColumn {
                get {
                    return this.columnunits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NORANGEColumn {
                get {
                    return this.columnNORANGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LBOUNDColumn {
                get {
                    return this.columnLBOUND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UBOUNDColumn {
                get {
                    return this.columnUBOUND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row1Column {
                get {
                    return this.columnRow1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row2Column {
                get {
                    return this.columnRow2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row3Column {
                get {
                    return this.columnRow3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row4Column {
                get {
                    return this.columnRow4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row5Column {
                get {
                    return this.columnRow5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row6Column {
                get {
                    return this.columnRow6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row7Column {
                get {
                    return this.columnRow7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row1val1Column {
                get {
                    return this.columnRow1val1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row1val2Column {
                get {
                    return this.columnRow1val2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row1val3Column {
                get {
                    return this.columnRow1val3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row1val4Column {
                get {
                    return this.columnRow1val4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row1val5Column {
                get {
                    return this.columnRow1val5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row1val6Column {
                get {
                    return this.columnRow1val6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row2val1Column {
                get {
                    return this.columnRow2val1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row2val2Column {
                get {
                    return this.columnRow2val2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row2val3Column {
                get {
                    return this.columnRow2val3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row2val4Column {
                get {
                    return this.columnRow2val4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row2val5Column {
                get {
                    return this.columnRow2val5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row2val6Column {
                get {
                    return this.columnRow2val6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row3val1Column {
                get {
                    return this.columnRow3val1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row3val2Column {
                get {
                    return this.columnRow3val2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row3val3Column {
                get {
                    return this.columnRow3val3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row3val4Column {
                get {
                    return this.columnRow3val4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row3val5Column {
                get {
                    return this.columnRow3val5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row3val6Column {
                get {
                    return this.columnRow3val6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row4val1Column {
                get {
                    return this.columnRow4val1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row4val2Column {
                get {
                    return this.columnRow4val2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row4val3Column {
                get {
                    return this.columnRow4val3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row4val4Column {
                get {
                    return this.columnRow4val4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row4val5Column {
                get {
                    return this.columnRow4val5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row4val6Column {
                get {
                    return this.columnRow4val6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row5val1Column {
                get {
                    return this.columnRow5val1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row5val2Column {
                get {
                    return this.columnRow5val2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row5val3Column {
                get {
                    return this.columnRow5val3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row5val4Column {
                get {
                    return this.columnRow5val4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row5val5Column {
                get {
                    return this.columnRow5val5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row5val6Column {
                get {
                    return this.columnRow5val6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row6val1Column {
                get {
                    return this.columnRow6val1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row6val2Column {
                get {
                    return this.columnRow6val2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row6val3Column {
                get {
                    return this.columnRow6val3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row6val4Column {
                get {
                    return this.columnRow6val4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row6val5Column {
                get {
                    return this.columnRow6val5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row6val6Column {
                get {
                    return this.columnRow6val6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row7val1Column {
                get {
                    return this.columnRow7val1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row7val2Column {
                get {
                    return this.columnRow7val2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row7val3Column {
                get {
                    return this.columnRow7val3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row7val4Column {
                get {
                    return this.columnRow7val4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row7val5Column {
                get {
                    return this.columnRow7val5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Row7val6Column {
                get {
                    return this.columnRow7val6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tvalColumn {
                get {
                    return this.columntval;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn commentsColumn {
                get {
                    return this.columncomments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTPColumn {
                get {
                    return this.columnINTP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIGNColumn {
                get {
                    return this.columnSIGN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EORColumn {
                get {
                    return this.columnEOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemrepColumn {
                get {
                    return this.columnRemrep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IFINTPColumn {
                get {
                    return this.columnIFINTP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IFCOMMColumn {
                get {
                    return this.columnIFCOMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn abnormalColumn {
                get {
                    return this.columnabnormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HEADVALColumn {
                get {
                    return this.columnHEADVAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPColumn {
                get {
                    return this.columnTYP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn med1Column {
                get {
                    return this.columnmed1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn med2Column {
                get {
                    return this.columnmed2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn med3Column {
                get {
                    return this.columnmed3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn senstColumn {
                get {
                    return this.columnsenst;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookedunderColumn {
                get {
                    return this.columnBookedunder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REPWNHDColumn {
                get {
                    return this.columnREPWNHD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REPWNFTColumn {
                get {
                    return this.columnREPWNFT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowRow1Column {
                get {
                    return this.columnShowRow1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowRow2Column {
                get {
                    return this.columnShowRow2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowRow3Column {
                get {
                    return this.columnShowRow3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowRow4Column {
                get {
                    return this.columnShowRow4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowRow5Column {
                get {
                    return this.columnShowRow5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowRow6Column {
                get {
                    return this.columnShowRow6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShowRow7Column {
                get {
                    return this.columnShowRow7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrevTypeColumn {
                get {
                    return this.columnPrevType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_TableRow this[int index] {
                get {
                    return ((Report_TableRow)(this.Rows[index]));
                }
            }
            
            public event Report_TableRowChangeEventHandler Report_TableRowChanging;
            
            public event Report_TableRowChangeEventHandler Report_TableRowChanged;
            
            public event Report_TableRowChangeEventHandler Report_TableRowDeleting;
            
            public event Report_TableRowChangeEventHandler Report_TableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReport_TableRow(Report_TableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_TableRow AddReport_TableRow(
                        string codepk, 
                        string printpos, 
                        string booksno, 
                        string hcodepos, 
                        string sno, 
                        string testcode, 
                        int cultsno, 
                        string labno, 
                        string hcode, 
                        string hcodesno, 
                        string HName, 
                        string grpcode, 
                        string grpname, 
                        string tname, 
                        string units, 
                        string NORANGE, 
                        string LBOUND, 
                        string UBOUND, 
                        string Row1, 
                        string Row2, 
                        string Row3, 
                        string Row4, 
                        string Row5, 
                        string Row6, 
                        string Row7, 
                        string Row1val1, 
                        string Row1val2, 
                        string Row1val3, 
                        string Row1val4, 
                        string Row1val5, 
                        string Row1val6, 
                        string Row2val1, 
                        string Row2val2, 
                        string Row2val3, 
                        string Row2val4, 
                        string Row2val5, 
                        string Row2val6, 
                        string Row3val1, 
                        string Row3val2, 
                        string Row3val3, 
                        string Row3val4, 
                        string Row3val5, 
                        string Row3val6, 
                        string Row4val1, 
                        string Row4val2, 
                        string Row4val3, 
                        string Row4val4, 
                        string Row4val5, 
                        string Row4val6, 
                        string Row5val1, 
                        string Row5val2, 
                        string Row5val3, 
                        string Row5val4, 
                        string Row5val5, 
                        string Row5val6, 
                        string Row6val1, 
                        string Row6val2, 
                        string Row6val3, 
                        string Row6val4, 
                        string Row6val5, 
                        string Row6val6, 
                        string Row7val1, 
                        string Row7val2, 
                        string Row7val3, 
                        string Row7val4, 
                        string Row7val5, 
                        string Row7val6, 
                        string tval, 
                        string comments, 
                        string INTP, 
                        string SIGN, 
                        string EOR, 
                        string Remarks, 
                        string Remrep, 
                        string IFINTP, 
                        string IFCOMM, 
                        string abnormal, 
                        string HEADVAL, 
                        string TYP, 
                        string med1, 
                        string med2, 
                        string med3, 
                        string senst, 
                        string Bookedunder, 
                        string REPWNHD, 
                        string REPWNFT, 
                        string ShowRow1, 
                        string ShowRow2, 
                        string ShowRow3, 
                        string ShowRow4, 
                        string ShowRow5, 
                        string ShowRow6, 
                        string ShowRow7, 
                        string PrevType) {
                Report_TableRow rowReport_TableRow = ((Report_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        codepk,
                        printpos,
                        booksno,
                        hcodepos,
                        sno,
                        testcode,
                        cultsno,
                        labno,
                        hcode,
                        hcodesno,
                        HName,
                        grpcode,
                        grpname,
                        tname,
                        units,
                        NORANGE,
                        LBOUND,
                        UBOUND,
                        Row1,
                        Row2,
                        Row3,
                        Row4,
                        Row5,
                        Row6,
                        Row7,
                        Row1val1,
                        Row1val2,
                        Row1val3,
                        Row1val4,
                        Row1val5,
                        Row1val6,
                        Row2val1,
                        Row2val2,
                        Row2val3,
                        Row2val4,
                        Row2val5,
                        Row2val6,
                        Row3val1,
                        Row3val2,
                        Row3val3,
                        Row3val4,
                        Row3val5,
                        Row3val6,
                        Row4val1,
                        Row4val2,
                        Row4val3,
                        Row4val4,
                        Row4val5,
                        Row4val6,
                        Row5val1,
                        Row5val2,
                        Row5val3,
                        Row5val4,
                        Row5val5,
                        Row5val6,
                        Row6val1,
                        Row6val2,
                        Row6val3,
                        Row6val4,
                        Row6val5,
                        Row6val6,
                        Row7val1,
                        Row7val2,
                        Row7val3,
                        Row7val4,
                        Row7val5,
                        Row7val6,
                        tval,
                        comments,
                        INTP,
                        SIGN,
                        EOR,
                        Remarks,
                        Remrep,
                        IFINTP,
                        IFCOMM,
                        abnormal,
                        HEADVAL,
                        TYP,
                        med1,
                        med2,
                        med3,
                        senst,
                        Bookedunder,
                        REPWNHD,
                        REPWNFT,
                        ShowRow1,
                        ShowRow2,
                        ShowRow3,
                        ShowRow4,
                        ShowRow5,
                        ShowRow6,
                        ShowRow7,
                        PrevType};
                rowReport_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReport_TableRow);
                return rowReport_TableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Report_TableDataTable cln = ((Report_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Report_TableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncodepk = base.Columns["codepk"];
                this.columnprintpos = base.Columns["printpos"];
                this.columnbooksno = base.Columns["booksno"];
                this.columnhcodepos = base.Columns["hcodepos"];
                this.columnsno = base.Columns["sno"];
                this.columntestcode = base.Columns["testcode"];
                this.columncultsno = base.Columns["cultsno"];
                this.columnlabno = base.Columns["labno"];
                this.columnhcode = base.Columns["hcode"];
                this.columnhcodesno = base.Columns["hcodesno"];
                this.columnHName = base.Columns["HName"];
                this.columngrpcode = base.Columns["grpcode"];
                this.columngrpname = base.Columns["grpname"];
                this.columntname = base.Columns["tname"];
                this.columnunits = base.Columns["units"];
                this.columnNORANGE = base.Columns["NORANGE"];
                this.columnLBOUND = base.Columns["LBOUND"];
                this.columnUBOUND = base.Columns["UBOUND"];
                this.columnRow1 = base.Columns["Row1"];
                this.columnRow2 = base.Columns["Row2"];
                this.columnRow3 = base.Columns["Row3"];
                this.columnRow4 = base.Columns["Row4"];
                this.columnRow5 = base.Columns["Row5"];
                this.columnRow6 = base.Columns["Row6"];
                this.columnRow7 = base.Columns["Row7"];
                this.columnRow1val1 = base.Columns["Row1val1"];
                this.columnRow1val2 = base.Columns["Row1val2"];
                this.columnRow1val3 = base.Columns["Row1val3"];
                this.columnRow1val4 = base.Columns["Row1val4"];
                this.columnRow1val5 = base.Columns["Row1val5"];
                this.columnRow1val6 = base.Columns["Row1val6"];
                this.columnRow2val1 = base.Columns["Row2val1"];
                this.columnRow2val2 = base.Columns["Row2val2"];
                this.columnRow2val3 = base.Columns["Row2val3"];
                this.columnRow2val4 = base.Columns["Row2val4"];
                this.columnRow2val5 = base.Columns["Row2val5"];
                this.columnRow2val6 = base.Columns["Row2val6"];
                this.columnRow3val1 = base.Columns["Row3val1"];
                this.columnRow3val2 = base.Columns["Row3val2"];
                this.columnRow3val3 = base.Columns["Row3val3"];
                this.columnRow3val4 = base.Columns["Row3val4"];
                this.columnRow3val5 = base.Columns["Row3val5"];
                this.columnRow3val6 = base.Columns["Row3val6"];
                this.columnRow4val1 = base.Columns["Row4val1"];
                this.columnRow4val2 = base.Columns["Row4val2"];
                this.columnRow4val3 = base.Columns["Row4val3"];
                this.columnRow4val4 = base.Columns["Row4val4"];
                this.columnRow4val5 = base.Columns["Row4val5"];
                this.columnRow4val6 = base.Columns["Row4val6"];
                this.columnRow5val1 = base.Columns["Row5val1"];
                this.columnRow5val2 = base.Columns["Row5val2"];
                this.columnRow5val3 = base.Columns["Row5val3"];
                this.columnRow5val4 = base.Columns["Row5val4"];
                this.columnRow5val5 = base.Columns["Row5val5"];
                this.columnRow5val6 = base.Columns["Row5val6"];
                this.columnRow6val1 = base.Columns["Row6val1"];
                this.columnRow6val2 = base.Columns["Row6val2"];
                this.columnRow6val3 = base.Columns["Row6val3"];
                this.columnRow6val4 = base.Columns["Row6val4"];
                this.columnRow6val5 = base.Columns["Row6val5"];
                this.columnRow6val6 = base.Columns["Row6val6"];
                this.columnRow7val1 = base.Columns["Row7val1"];
                this.columnRow7val2 = base.Columns["Row7val2"];
                this.columnRow7val3 = base.Columns["Row7val3"];
                this.columnRow7val4 = base.Columns["Row7val4"];
                this.columnRow7val5 = base.Columns["Row7val5"];
                this.columnRow7val6 = base.Columns["Row7val6"];
                this.columntval = base.Columns["tval"];
                this.columncomments = base.Columns["comments"];
                this.columnINTP = base.Columns["INTP"];
                this.columnSIGN = base.Columns["SIGN"];
                this.columnEOR = base.Columns["EOR"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnRemrep = base.Columns["Remrep"];
                this.columnIFINTP = base.Columns["IFINTP"];
                this.columnIFCOMM = base.Columns["IFCOMM"];
                this.columnabnormal = base.Columns["abnormal"];
                this.columnHEADVAL = base.Columns["HEADVAL"];
                this.columnTYP = base.Columns["TYP"];
                this.columnmed1 = base.Columns["med1"];
                this.columnmed2 = base.Columns["med2"];
                this.columnmed3 = base.Columns["med3"];
                this.columnsenst = base.Columns["senst"];
                this.columnBookedunder = base.Columns["Bookedunder"];
                this.columnREPWNHD = base.Columns["REPWNHD"];
                this.columnREPWNFT = base.Columns["REPWNFT"];
                this.columnShowRow1 = base.Columns["ShowRow1"];
                this.columnShowRow2 = base.Columns["ShowRow2"];
                this.columnShowRow3 = base.Columns["ShowRow3"];
                this.columnShowRow4 = base.Columns["ShowRow4"];
                this.columnShowRow5 = base.Columns["ShowRow5"];
                this.columnShowRow6 = base.Columns["ShowRow6"];
                this.columnShowRow7 = base.Columns["ShowRow7"];
                this.columnPrevType = base.Columns["PrevType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncodepk = new global::System.Data.DataColumn("codepk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodepk);
                this.columnprintpos = new global::System.Data.DataColumn("printpos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprintpos);
                this.columnbooksno = new global::System.Data.DataColumn("booksno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbooksno);
                this.columnhcodepos = new global::System.Data.DataColumn("hcodepos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhcodepos);
                this.columnsno = new global::System.Data.DataColumn("sno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsno);
                this.columntestcode = new global::System.Data.DataColumn("testcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntestcode);
                this.columncultsno = new global::System.Data.DataColumn("cultsno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncultsno);
                this.columnlabno = new global::System.Data.DataColumn("labno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlabno);
                this.columnhcode = new global::System.Data.DataColumn("hcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhcode);
                this.columnhcodesno = new global::System.Data.DataColumn("hcodesno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhcodesno);
                this.columnHName = new global::System.Data.DataColumn("HName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHName);
                this.columngrpcode = new global::System.Data.DataColumn("grpcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrpcode);
                this.columngrpname = new global::System.Data.DataColumn("grpname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrpname);
                this.columntname = new global::System.Data.DataColumn("tname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntname);
                this.columnunits = new global::System.Data.DataColumn("units", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunits);
                this.columnNORANGE = new global::System.Data.DataColumn("NORANGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNORANGE);
                this.columnLBOUND = new global::System.Data.DataColumn("LBOUND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLBOUND);
                this.columnUBOUND = new global::System.Data.DataColumn("UBOUND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUBOUND);
                this.columnRow1 = new global::System.Data.DataColumn("Row1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow1);
                this.columnRow2 = new global::System.Data.DataColumn("Row2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow2);
                this.columnRow3 = new global::System.Data.DataColumn("Row3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow3);
                this.columnRow4 = new global::System.Data.DataColumn("Row4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow4);
                this.columnRow5 = new global::System.Data.DataColumn("Row5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow5);
                this.columnRow6 = new global::System.Data.DataColumn("Row6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow6);
                this.columnRow7 = new global::System.Data.DataColumn("Row7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow7);
                this.columnRow1val1 = new global::System.Data.DataColumn("Row1val1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow1val1);
                this.columnRow1val2 = new global::System.Data.DataColumn("Row1val2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow1val2);
                this.columnRow1val3 = new global::System.Data.DataColumn("Row1val3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow1val3);
                this.columnRow1val4 = new global::System.Data.DataColumn("Row1val4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow1val4);
                this.columnRow1val5 = new global::System.Data.DataColumn("Row1val5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow1val5);
                this.columnRow1val6 = new global::System.Data.DataColumn("Row1val6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow1val6);
                this.columnRow2val1 = new global::System.Data.DataColumn("Row2val1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow2val1);
                this.columnRow2val2 = new global::System.Data.DataColumn("Row2val2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow2val2);
                this.columnRow2val3 = new global::System.Data.DataColumn("Row2val3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow2val3);
                this.columnRow2val4 = new global::System.Data.DataColumn("Row2val4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow2val4);
                this.columnRow2val5 = new global::System.Data.DataColumn("Row2val5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow2val5);
                this.columnRow2val6 = new global::System.Data.DataColumn("Row2val6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow2val6);
                this.columnRow3val1 = new global::System.Data.DataColumn("Row3val1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow3val1);
                this.columnRow3val2 = new global::System.Data.DataColumn("Row3val2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow3val2);
                this.columnRow3val3 = new global::System.Data.DataColumn("Row3val3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow3val3);
                this.columnRow3val4 = new global::System.Data.DataColumn("Row3val4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow3val4);
                this.columnRow3val5 = new global::System.Data.DataColumn("Row3val5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow3val5);
                this.columnRow3val6 = new global::System.Data.DataColumn("Row3val6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow3val6);
                this.columnRow4val1 = new global::System.Data.DataColumn("Row4val1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow4val1);
                this.columnRow4val2 = new global::System.Data.DataColumn("Row4val2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow4val2);
                this.columnRow4val3 = new global::System.Data.DataColumn("Row4val3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow4val3);
                this.columnRow4val4 = new global::System.Data.DataColumn("Row4val4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow4val4);
                this.columnRow4val5 = new global::System.Data.DataColumn("Row4val5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow4val5);
                this.columnRow4val6 = new global::System.Data.DataColumn("Row4val6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow4val6);
                this.columnRow5val1 = new global::System.Data.DataColumn("Row5val1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow5val1);
                this.columnRow5val2 = new global::System.Data.DataColumn("Row5val2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow5val2);
                this.columnRow5val3 = new global::System.Data.DataColumn("Row5val3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow5val3);
                this.columnRow5val4 = new global::System.Data.DataColumn("Row5val4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow5val4);
                this.columnRow5val5 = new global::System.Data.DataColumn("Row5val5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow5val5);
                this.columnRow5val6 = new global::System.Data.DataColumn("Row5val6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow5val6);
                this.columnRow6val1 = new global::System.Data.DataColumn("Row6val1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow6val1);
                this.columnRow6val2 = new global::System.Data.DataColumn("Row6val2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow6val2);
                this.columnRow6val3 = new global::System.Data.DataColumn("Row6val3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow6val3);
                this.columnRow6val4 = new global::System.Data.DataColumn("Row6val4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow6val4);
                this.columnRow6val5 = new global::System.Data.DataColumn("Row6val5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow6val5);
                this.columnRow6val6 = new global::System.Data.DataColumn("Row6val6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow6val6);
                this.columnRow7val1 = new global::System.Data.DataColumn("Row7val1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow7val1);
                this.columnRow7val2 = new global::System.Data.DataColumn("Row7val2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow7val2);
                this.columnRow7val3 = new global::System.Data.DataColumn("Row7val3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow7val3);
                this.columnRow7val4 = new global::System.Data.DataColumn("Row7val4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow7val4);
                this.columnRow7val5 = new global::System.Data.DataColumn("Row7val5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow7val5);
                this.columnRow7val6 = new global::System.Data.DataColumn("Row7val6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRow7val6);
                this.columntval = new global::System.Data.DataColumn("tval", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntval);
                this.columncomments = new global::System.Data.DataColumn("comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncomments);
                this.columnINTP = new global::System.Data.DataColumn("INTP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTP);
                this.columnSIGN = new global::System.Data.DataColumn("SIGN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIGN);
                this.columnEOR = new global::System.Data.DataColumn("EOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEOR);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnRemrep = new global::System.Data.DataColumn("Remrep", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemrep);
                this.columnIFINTP = new global::System.Data.DataColumn("IFINTP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIFINTP);
                this.columnIFCOMM = new global::System.Data.DataColumn("IFCOMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIFCOMM);
                this.columnabnormal = new global::System.Data.DataColumn("abnormal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnabnormal);
                this.columnHEADVAL = new global::System.Data.DataColumn("HEADVAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHEADVAL);
                this.columnTYP = new global::System.Data.DataColumn("TYP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYP);
                this.columnmed1 = new global::System.Data.DataColumn("med1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmed1);
                this.columnmed2 = new global::System.Data.DataColumn("med2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmed2);
                this.columnmed3 = new global::System.Data.DataColumn("med3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmed3);
                this.columnsenst = new global::System.Data.DataColumn("senst", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsenst);
                this.columnBookedunder = new global::System.Data.DataColumn("Bookedunder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookedunder);
                this.columnREPWNHD = new global::System.Data.DataColumn("REPWNHD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPWNHD);
                this.columnREPWNFT = new global::System.Data.DataColumn("REPWNFT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPWNFT);
                this.columnShowRow1 = new global::System.Data.DataColumn("ShowRow1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowRow1);
                this.columnShowRow2 = new global::System.Data.DataColumn("ShowRow2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowRow2);
                this.columnShowRow3 = new global::System.Data.DataColumn("ShowRow3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowRow3);
                this.columnShowRow4 = new global::System.Data.DataColumn("ShowRow4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowRow4);
                this.columnShowRow5 = new global::System.Data.DataColumn("ShowRow5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowRow5);
                this.columnShowRow6 = new global::System.Data.DataColumn("ShowRow6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowRow6);
                this.columnShowRow7 = new global::System.Data.DataColumn("ShowRow7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShowRow7);
                this.columnPrevType = new global::System.Data.DataColumn("PrevType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevType);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_TableRow NewReport_TableRow() {
                return ((Report_TableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Report_TableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Report_TableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Report_TableRowChanged != null)) {
                    this.Report_TableRowChanged(this, new Report_TableRowChangeEvent(((Report_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Report_TableRowChanging != null)) {
                    this.Report_TableRowChanging(this, new Report_TableRowChangeEvent(((Report_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Report_TableRowDeleted != null)) {
                    this.Report_TableRowDeleted(this, new Report_TableRowChangeEvent(((Report_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Report_TableRowDeleting != null)) {
                    this.Report_TableRowDeleting(this, new Report_TableRowChangeEvent(((Report_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReport_TableRow(Report_TableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportData ds = new ReportData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Report_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Report_Table2DataTable : global::System.Data.TypedTableBase<Report_Table2Row> {
            
            private global::System.Data.DataColumn columngrpcode;
            
            private global::System.Data.DataColumn columngrpname;
            
            private global::System.Data.DataColumn columnhcodepos;
            
            private global::System.Data.DataColumn columncodepk;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_Table2DataTable() {
                this.TableName = "Report_Table2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Report_Table2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Report_Table2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn grpcodeColumn {
                get {
                    return this.columngrpcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn grpnameColumn {
                get {
                    return this.columngrpname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hcodeposColumn {
                get {
                    return this.columnhcodepos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codepkColumn {
                get {
                    return this.columncodepk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_Table2Row this[int index] {
                get {
                    return ((Report_Table2Row)(this.Rows[index]));
                }
            }
            
            public event Report_Table2RowChangeEventHandler Report_Table2RowChanging;
            
            public event Report_Table2RowChangeEventHandler Report_Table2RowChanged;
            
            public event Report_Table2RowChangeEventHandler Report_Table2RowDeleting;
            
            public event Report_Table2RowChangeEventHandler Report_Table2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReport_Table2Row(Report_Table2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_Table2Row AddReport_Table2Row(string grpcode, string grpname, string hcodepos, string codepk) {
                Report_Table2Row rowReport_Table2Row = ((Report_Table2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        grpcode,
                        grpname,
                        hcodepos,
                        codepk};
                rowReport_Table2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowReport_Table2Row);
                return rowReport_Table2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Report_Table2DataTable cln = ((Report_Table2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Report_Table2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columngrpcode = base.Columns["grpcode"];
                this.columngrpname = base.Columns["grpname"];
                this.columnhcodepos = base.Columns["hcodepos"];
                this.columncodepk = base.Columns["codepk"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columngrpcode = new global::System.Data.DataColumn("grpcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrpcode);
                this.columngrpname = new global::System.Data.DataColumn("grpname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrpname);
                this.columnhcodepos = new global::System.Data.DataColumn("hcodepos", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhcodepos);
                this.columncodepk = new global::System.Data.DataColumn("codepk", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncodepk);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_Table2Row NewReport_Table2Row() {
                return ((Report_Table2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Report_Table2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Report_Table2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Report_Table2RowChanged != null)) {
                    this.Report_Table2RowChanged(this, new Report_Table2RowChangeEvent(((Report_Table2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Report_Table2RowChanging != null)) {
                    this.Report_Table2RowChanging(this, new Report_Table2RowChangeEvent(((Report_Table2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Report_Table2RowDeleted != null)) {
                    this.Report_Table2RowDeleted(this, new Report_Table2RowChangeEvent(((Report_Table2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Report_Table2RowDeleting != null)) {
                    this.Report_Table2RowDeleting(this, new Report_Table2RowChangeEvent(((Report_Table2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReport_Table2Row(Report_Table2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportData ds = new ReportData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Report_Table2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Report_HeaderDataTable : global::System.Data.TypedTableBase<Report_HeaderRow> {
            
            private global::System.Data.DataColumn columnPatName;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnSex;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnRegnNo;
            
            private global::System.Data.DataColumn columnLabNo;
            
            private global::System.Data.DataColumn columnPatCode;
            
            private global::System.Data.DataColumn columnReferBy;
            
            private global::System.Data.DataColumn columnHeader;
            
            private global::System.Data.DataColumn columnFooterHeight;
            
            private global::System.Data.DataColumn columnFooter;
            
            private global::System.Data.DataColumn columnLogoImage;
            
            private global::System.Data.DataColumn columnlogotp;
            
            private global::System.Data.DataColumn columnlogolft;
            
            private global::System.Data.DataColumn columnlogowid;
            
            private global::System.Data.DataColumn columnlogoht;
            
            private global::System.Data.DataColumn columnislogo;
            
            private global::System.Data.DataColumn columnSignImage;
            
            private global::System.Data.DataColumn columnSIlft;
            
            private global::System.Data.DataColumn columnSItop;
            
            private global::System.Data.DataColumn columnSIwd;
            
            private global::System.Data.DataColumn columnSIht;
            
            private global::System.Data.DataColumn columnConsSign;
            
            private global::System.Data.DataColumn columnApprovedBy;
            
            private global::System.Data.DataColumn columnApprovedTime;
            
            private global::System.Data.DataColumn columnshowAppr;
            
            private global::System.Data.DataColumn columnshowApptime;
            
            private global::System.Data.DataColumn columnApprovedbyLeft;
            
            private global::System.Data.DataColumn columnApprovedBytop;
            
            private global::System.Data.DataColumn columnApptimeTop;
            
            private global::System.Data.DataColumn columnWEBSIGNIMAGE;
            
            private global::System.Data.DataColumn columnAppTimeLeft;
            
            private global::System.Data.DataColumn columnWEBLOGOHT;
            
            private global::System.Data.DataColumn columnWEBLOGOLT;
            
            private global::System.Data.DataColumn columnWEBLOGOTOP;
            
            private global::System.Data.DataColumn columnWEBLOGOWID;
            
            private global::System.Data.DataColumn columnDataColumn1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_HeaderDataTable() {
                this.TableName = "Report_Header";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Report_HeaderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Report_HeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PatNameColumn {
                get {
                    return this.columnPatName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexColumn {
                get {
                    return this.columnSex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegnNoColumn {
                get {
                    return this.columnRegnNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LabNoColumn {
                get {
                    return this.columnLabNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PatCodeColumn {
                get {
                    return this.columnPatCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferByColumn {
                get {
                    return this.columnReferBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderColumn {
                get {
                    return this.columnHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FooterHeightColumn {
                get {
                    return this.columnFooterHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FooterColumn {
                get {
                    return this.columnFooter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogoImageColumn {
                get {
                    return this.columnLogoImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn logotpColumn {
                get {
                    return this.columnlogotp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn logolftColumn {
                get {
                    return this.columnlogolft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn logowidColumn {
                get {
                    return this.columnlogowid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn logohtColumn {
                get {
                    return this.columnlogoht;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn islogoColumn {
                get {
                    return this.columnislogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SignImageColumn {
                get {
                    return this.columnSignImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIlftColumn {
                get {
                    return this.columnSIlft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SItopColumn {
                get {
                    return this.columnSItop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIwdColumn {
                get {
                    return this.columnSIwd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIhtColumn {
                get {
                    return this.columnSIht;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsSignColumn {
                get {
                    return this.columnConsSign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApprovedByColumn {
                get {
                    return this.columnApprovedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApprovedTimeColumn {
                get {
                    return this.columnApprovedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn showApprColumn {
                get {
                    return this.columnshowAppr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn showApptimeColumn {
                get {
                    return this.columnshowApptime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApprovedbyLeftColumn {
                get {
                    return this.columnApprovedbyLeft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApprovedBytopColumn {
                get {
                    return this.columnApprovedBytop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ApptimeTopColumn {
                get {
                    return this.columnApptimeTop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WEBSIGNIMAGEColumn {
                get {
                    return this.columnWEBSIGNIMAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AppTimeLeftColumn {
                get {
                    return this.columnAppTimeLeft;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WEBLOGOHTColumn {
                get {
                    return this.columnWEBLOGOHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WEBLOGOLTColumn {
                get {
                    return this.columnWEBLOGOLT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WEBLOGOTOPColumn {
                get {
                    return this.columnWEBLOGOTOP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WEBLOGOWIDColumn {
                get {
                    return this.columnWEBLOGOWID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn1Column {
                get {
                    return this.columnDataColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_HeaderRow this[int index] {
                get {
                    return ((Report_HeaderRow)(this.Rows[index]));
                }
            }
            
            public event Report_HeaderRowChangeEventHandler Report_HeaderRowChanging;
            
            public event Report_HeaderRowChangeEventHandler Report_HeaderRowChanged;
            
            public event Report_HeaderRowChangeEventHandler Report_HeaderRowDeleting;
            
            public event Report_HeaderRowChangeEventHandler Report_HeaderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReport_HeaderRow(Report_HeaderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_HeaderRow AddReport_HeaderRow(
                        string PatName, 
                        string Age, 
                        string Sex, 
                        string Date, 
                        string RegnNo, 
                        string LabNo, 
                        string PatCode, 
                        string ReferBy, 
                        string Header, 
                        string FooterHeight, 
                        string Footer, 
                        byte[] LogoImage, 
                        string logotp, 
                        string logolft, 
                        string logowid, 
                        string logoht, 
                        string islogo, 
                        byte[] SignImage, 
                        string SIlft, 
                        string SItop, 
                        string SIwd, 
                        string SIht, 
                        string ConsSign, 
                        string ApprovedBy, 
                        string ApprovedTime, 
                        int showAppr, 
                        int showApptime, 
                        double ApprovedbyLeft, 
                        double ApprovedBytop, 
                        double ApptimeTop, 
                        byte[] WEBSIGNIMAGE, 
                        double AppTimeLeft, 
                        string WEBLOGOHT, 
                        string WEBLOGOLT, 
                        string WEBLOGOTOP, 
                        string WEBLOGOWID, 
                        string DataColumn1) {
                Report_HeaderRow rowReport_HeaderRow = ((Report_HeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatName,
                        Age,
                        Sex,
                        Date,
                        RegnNo,
                        LabNo,
                        PatCode,
                        ReferBy,
                        Header,
                        FooterHeight,
                        Footer,
                        LogoImage,
                        logotp,
                        logolft,
                        logowid,
                        logoht,
                        islogo,
                        SignImage,
                        SIlft,
                        SItop,
                        SIwd,
                        SIht,
                        ConsSign,
                        ApprovedBy,
                        ApprovedTime,
                        showAppr,
                        showApptime,
                        ApprovedbyLeft,
                        ApprovedBytop,
                        ApptimeTop,
                        WEBSIGNIMAGE,
                        AppTimeLeft,
                        WEBLOGOHT,
                        WEBLOGOLT,
                        WEBLOGOTOP,
                        WEBLOGOWID,
                        DataColumn1};
                rowReport_HeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReport_HeaderRow);
                return rowReport_HeaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Report_HeaderDataTable cln = ((Report_HeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Report_HeaderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPatName = base.Columns["PatName"];
                this.columnAge = base.Columns["Age"];
                this.columnSex = base.Columns["Sex"];
                this.columnDate = base.Columns["Date"];
                this.columnRegnNo = base.Columns["RegnNo"];
                this.columnLabNo = base.Columns["LabNo"];
                this.columnPatCode = base.Columns["PatCode"];
                this.columnReferBy = base.Columns["ReferBy"];
                this.columnHeader = base.Columns["Header"];
                this.columnFooterHeight = base.Columns["FooterHeight"];
                this.columnFooter = base.Columns["Footer"];
                this.columnLogoImage = base.Columns["LogoImage"];
                this.columnlogotp = base.Columns["logotp"];
                this.columnlogolft = base.Columns["logolft"];
                this.columnlogowid = base.Columns["logowid"];
                this.columnlogoht = base.Columns["logoht"];
                this.columnislogo = base.Columns["islogo"];
                this.columnSignImage = base.Columns["SignImage"];
                this.columnSIlft = base.Columns["SIlft"];
                this.columnSItop = base.Columns["SItop"];
                this.columnSIwd = base.Columns["SIwd"];
                this.columnSIht = base.Columns["SIht"];
                this.columnConsSign = base.Columns["ConsSign"];
                this.columnApprovedBy = base.Columns["ApprovedBy"];
                this.columnApprovedTime = base.Columns["ApprovedTime"];
                this.columnshowAppr = base.Columns["showAppr"];
                this.columnshowApptime = base.Columns["showApptime"];
                this.columnApprovedbyLeft = base.Columns["ApprovedbyLeft"];
                this.columnApprovedBytop = base.Columns["ApprovedBytop"];
                this.columnApptimeTop = base.Columns["ApptimeTop"];
                this.columnWEBSIGNIMAGE = base.Columns["WEBSIGNIMAGE"];
                this.columnAppTimeLeft = base.Columns["AppTimeLeft"];
                this.columnWEBLOGOHT = base.Columns["WEBLOGOHT"];
                this.columnWEBLOGOLT = base.Columns["WEBLOGOLT"];
                this.columnWEBLOGOTOP = base.Columns["WEBLOGOTOP"];
                this.columnWEBLOGOWID = base.Columns["WEBLOGOWID"];
                this.columnDataColumn1 = base.Columns["DataColumn1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPatName = new global::System.Data.DataColumn("PatName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatName);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnSex = new global::System.Data.DataColumn("Sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSex);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnRegnNo = new global::System.Data.DataColumn("RegnNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegnNo);
                this.columnLabNo = new global::System.Data.DataColumn("LabNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabNo);
                this.columnPatCode = new global::System.Data.DataColumn("PatCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatCode);
                this.columnReferBy = new global::System.Data.DataColumn("ReferBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferBy);
                this.columnHeader = new global::System.Data.DataColumn("Header", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeader);
                this.columnFooterHeight = new global::System.Data.DataColumn("FooterHeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFooterHeight);
                this.columnFooter = new global::System.Data.DataColumn("Footer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFooter);
                this.columnLogoImage = new global::System.Data.DataColumn("LogoImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogoImage);
                this.columnlogotp = new global::System.Data.DataColumn("logotp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogotp);
                this.columnlogolft = new global::System.Data.DataColumn("logolft", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogolft);
                this.columnlogowid = new global::System.Data.DataColumn("logowid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogowid);
                this.columnlogoht = new global::System.Data.DataColumn("logoht", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogoht);
                this.columnislogo = new global::System.Data.DataColumn("islogo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnislogo);
                this.columnSignImage = new global::System.Data.DataColumn("SignImage", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignImage);
                this.columnSIlft = new global::System.Data.DataColumn("SIlft", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIlft);
                this.columnSItop = new global::System.Data.DataColumn("SItop", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSItop);
                this.columnSIwd = new global::System.Data.DataColumn("SIwd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIwd);
                this.columnSIht = new global::System.Data.DataColumn("SIht", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIht);
                this.columnConsSign = new global::System.Data.DataColumn("ConsSign", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsSign);
                this.columnApprovedBy = new global::System.Data.DataColumn("ApprovedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedBy);
                this.columnApprovedTime = new global::System.Data.DataColumn("ApprovedTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedTime);
                this.columnshowAppr = new global::System.Data.DataColumn("showAppr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshowAppr);
                this.columnshowApptime = new global::System.Data.DataColumn("showApptime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshowApptime);
                this.columnApprovedbyLeft = new global::System.Data.DataColumn("ApprovedbyLeft", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedbyLeft);
                this.columnApprovedBytop = new global::System.Data.DataColumn("ApprovedBytop", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedBytop);
                this.columnApptimeTop = new global::System.Data.DataColumn("ApptimeTop", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApptimeTop);
                this.columnWEBSIGNIMAGE = new global::System.Data.DataColumn("WEBSIGNIMAGE", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEBSIGNIMAGE);
                this.columnAppTimeLeft = new global::System.Data.DataColumn("AppTimeLeft", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppTimeLeft);
                this.columnWEBLOGOHT = new global::System.Data.DataColumn("WEBLOGOHT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEBLOGOHT);
                this.columnWEBLOGOLT = new global::System.Data.DataColumn("WEBLOGOLT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEBLOGOLT);
                this.columnWEBLOGOTOP = new global::System.Data.DataColumn("WEBLOGOTOP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEBLOGOTOP);
                this.columnWEBLOGOWID = new global::System.Data.DataColumn("WEBLOGOWID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEBLOGOWID);
                this.columnDataColumn1 = new global::System.Data.DataColumn("DataColumn1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_HeaderRow NewReport_HeaderRow() {
                return ((Report_HeaderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Report_HeaderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Report_HeaderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Report_HeaderRowChanged != null)) {
                    this.Report_HeaderRowChanged(this, new Report_HeaderRowChangeEvent(((Report_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Report_HeaderRowChanging != null)) {
                    this.Report_HeaderRowChanging(this, new Report_HeaderRowChangeEvent(((Report_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Report_HeaderRowDeleted != null)) {
                    this.Report_HeaderRowDeleted(this, new Report_HeaderRowChangeEvent(((Report_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Report_HeaderRowDeleting != null)) {
                    this.Report_HeaderRowDeleting(this, new Report_HeaderRowChangeEvent(((Report_HeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReport_HeaderRow(Report_HeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportData ds = new ReportData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Report_HeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Report_FormatDataTable : global::System.Data.TypedTableBase<Report_FormatRow> {
            
            private global::System.Data.DataColumn columnAbnormal_Red;
            
            private global::System.Data.DataColumn columnAbnormal_Green;
            
            private global::System.Data.DataColumn columnAbnormal_Blue;
            
            private global::System.Data.DataColumn columnAbnormal_Bold;
            
            private global::System.Data.DataColumn columnAbnormal_UL;
            
            private global::System.Data.DataColumn columnDetail_Font;
            
            private global::System.Data.DataColumn columnDetail_Size;
            
            private global::System.Data.DataColumn columnDetail_Red;
            
            private global::System.Data.DataColumn columnDetail_Blue;
            
            private global::System.Data.DataColumn columnDetail_Green;
            
            private global::System.Data.DataColumn columnNormal_Red;
            
            private global::System.Data.DataColumn columnNormal_Blue;
            
            private global::System.Data.DataColumn columnNormal_Green;
            
            private global::System.Data.DataColumn columnNormal_Bold;
            
            private global::System.Data.DataColumn columnTestName_Print;
            
            private global::System.Data.DataColumn columnResult_Print;
            
            private global::System.Data.DataColumn columnUnits_Print;
            
            private global::System.Data.DataColumn columnNormalRange_Print;
            
            private global::System.Data.DataColumn columnHeadname_Font;
            
            private global::System.Data.DataColumn columnHeadname_Red;
            
            private global::System.Data.DataColumn columnHeadname_Green;
            
            private global::System.Data.DataColumn columnHeadname_Blue;
            
            private global::System.Data.DataColumn columnHeadname_Size;
            
            private global::System.Data.DataColumn columnNormal_UL;
            
            private global::System.Data.DataColumn columnXRay_Page;
            
            private global::System.Data.DataColumn columnAbnormal_Asterik;
            
            private global::System.Data.DataColumn columnRequireNewPageAfterHead;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_FormatDataTable() {
                this.TableName = "Report_Format";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Report_FormatDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Report_FormatDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Abnormal_RedColumn {
                get {
                    return this.columnAbnormal_Red;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Abnormal_GreenColumn {
                get {
                    return this.columnAbnormal_Green;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Abnormal_BlueColumn {
                get {
                    return this.columnAbnormal_Blue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Abnormal_BoldColumn {
                get {
                    return this.columnAbnormal_Bold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Abnormal_ULColumn {
                get {
                    return this.columnAbnormal_UL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Detail_FontColumn {
                get {
                    return this.columnDetail_Font;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Detail_SizeColumn {
                get {
                    return this.columnDetail_Size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Detail_RedColumn {
                get {
                    return this.columnDetail_Red;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Detail_BlueColumn {
                get {
                    return this.columnDetail_Blue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Detail_GreenColumn {
                get {
                    return this.columnDetail_Green;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Normal_RedColumn {
                get {
                    return this.columnNormal_Red;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Normal_BlueColumn {
                get {
                    return this.columnNormal_Blue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Normal_GreenColumn {
                get {
                    return this.columnNormal_Green;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Normal_BoldColumn {
                get {
                    return this.columnNormal_Bold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TestName_PrintColumn {
                get {
                    return this.columnTestName_Print;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Result_PrintColumn {
                get {
                    return this.columnResult_Print;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Units_PrintColumn {
                get {
                    return this.columnUnits_Print;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NormalRange_PrintColumn {
                get {
                    return this.columnNormalRange_Print;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Headname_FontColumn {
                get {
                    return this.columnHeadname_Font;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Headname_RedColumn {
                get {
                    return this.columnHeadname_Red;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Headname_GreenColumn {
                get {
                    return this.columnHeadname_Green;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Headname_BlueColumn {
                get {
                    return this.columnHeadname_Blue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Headname_SizeColumn {
                get {
                    return this.columnHeadname_Size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Normal_ULColumn {
                get {
                    return this.columnNormal_UL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XRay_PageColumn {
                get {
                    return this.columnXRay_Page;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Abnormal_AsterikColumn {
                get {
                    return this.columnAbnormal_Asterik;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequireNewPageAfterHeadColumn {
                get {
                    return this.columnRequireNewPageAfterHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_FormatRow this[int index] {
                get {
                    return ((Report_FormatRow)(this.Rows[index]));
                }
            }
            
            public event Report_FormatRowChangeEventHandler Report_FormatRowChanging;
            
            public event Report_FormatRowChangeEventHandler Report_FormatRowChanged;
            
            public event Report_FormatRowChangeEventHandler Report_FormatRowDeleting;
            
            public event Report_FormatRowChangeEventHandler Report_FormatRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReport_FormatRow(Report_FormatRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_FormatRow AddReport_FormatRow(
                        int Abnormal_Red, 
                        int Abnormal_Green, 
                        int Abnormal_Blue, 
                        int Abnormal_Bold, 
                        int Abnormal_UL, 
                        string Detail_Font, 
                        int Detail_Size, 
                        int Detail_Red, 
                        int Detail_Blue, 
                        int Detail_Green, 
                        int Normal_Red, 
                        int Normal_Blue, 
                        int Normal_Green, 
                        int Normal_Bold, 
                        string TestName_Print, 
                        string Result_Print, 
                        string Units_Print, 
                        string NormalRange_Print, 
                        string Headname_Font, 
                        int Headname_Red, 
                        int Headname_Green, 
                        int Headname_Blue, 
                        int Headname_Size, 
                        int Normal_UL, 
                        int XRay_Page, 
                        int Abnormal_Asterik, 
                        short RequireNewPageAfterHead) {
                Report_FormatRow rowReport_FormatRow = ((Report_FormatRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Abnormal_Red,
                        Abnormal_Green,
                        Abnormal_Blue,
                        Abnormal_Bold,
                        Abnormal_UL,
                        Detail_Font,
                        Detail_Size,
                        Detail_Red,
                        Detail_Blue,
                        Detail_Green,
                        Normal_Red,
                        Normal_Blue,
                        Normal_Green,
                        Normal_Bold,
                        TestName_Print,
                        Result_Print,
                        Units_Print,
                        NormalRange_Print,
                        Headname_Font,
                        Headname_Red,
                        Headname_Green,
                        Headname_Blue,
                        Headname_Size,
                        Normal_UL,
                        XRay_Page,
                        Abnormal_Asterik,
                        RequireNewPageAfterHead};
                rowReport_FormatRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReport_FormatRow);
                return rowReport_FormatRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Report_FormatDataTable cln = ((Report_FormatDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Report_FormatDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAbnormal_Red = base.Columns["Abnormal_Red"];
                this.columnAbnormal_Green = base.Columns["Abnormal_Green"];
                this.columnAbnormal_Blue = base.Columns["Abnormal_Blue"];
                this.columnAbnormal_Bold = base.Columns["Abnormal_Bold"];
                this.columnAbnormal_UL = base.Columns["Abnormal_UL"];
                this.columnDetail_Font = base.Columns["Detail_Font"];
                this.columnDetail_Size = base.Columns["Detail_Size"];
                this.columnDetail_Red = base.Columns["Detail_Red"];
                this.columnDetail_Blue = base.Columns["Detail_Blue"];
                this.columnDetail_Green = base.Columns["Detail_Green"];
                this.columnNormal_Red = base.Columns["Normal_Red"];
                this.columnNormal_Blue = base.Columns["Normal_Blue"];
                this.columnNormal_Green = base.Columns["Normal_Green"];
                this.columnNormal_Bold = base.Columns["Normal_Bold"];
                this.columnTestName_Print = base.Columns["TestName_Print"];
                this.columnResult_Print = base.Columns["Result_Print"];
                this.columnUnits_Print = base.Columns["Units_Print"];
                this.columnNormalRange_Print = base.Columns["NormalRange_Print"];
                this.columnHeadname_Font = base.Columns["Headname_Font"];
                this.columnHeadname_Red = base.Columns["Headname_Red"];
                this.columnHeadname_Green = base.Columns["Headname_Green"];
                this.columnHeadname_Blue = base.Columns["Headname_Blue"];
                this.columnHeadname_Size = base.Columns["Headname_Size"];
                this.columnNormal_UL = base.Columns["Normal_UL"];
                this.columnXRay_Page = base.Columns["XRay_Page"];
                this.columnAbnormal_Asterik = base.Columns["Abnormal_Asterik"];
                this.columnRequireNewPageAfterHead = base.Columns["RequireNewPageAfterHead"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAbnormal_Red = new global::System.Data.DataColumn("Abnormal_Red", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbnormal_Red);
                this.columnAbnormal_Green = new global::System.Data.DataColumn("Abnormal_Green", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbnormal_Green);
                this.columnAbnormal_Blue = new global::System.Data.DataColumn("Abnormal_Blue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbnormal_Blue);
                this.columnAbnormal_Bold = new global::System.Data.DataColumn("Abnormal_Bold", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbnormal_Bold);
                this.columnAbnormal_UL = new global::System.Data.DataColumn("Abnormal_UL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbnormal_UL);
                this.columnDetail_Font = new global::System.Data.DataColumn("Detail_Font", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetail_Font);
                this.columnDetail_Size = new global::System.Data.DataColumn("Detail_Size", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetail_Size);
                this.columnDetail_Red = new global::System.Data.DataColumn("Detail_Red", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetail_Red);
                this.columnDetail_Blue = new global::System.Data.DataColumn("Detail_Blue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetail_Blue);
                this.columnDetail_Green = new global::System.Data.DataColumn("Detail_Green", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetail_Green);
                this.columnNormal_Red = new global::System.Data.DataColumn("Normal_Red", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormal_Red);
                this.columnNormal_Blue = new global::System.Data.DataColumn("Normal_Blue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormal_Blue);
                this.columnNormal_Green = new global::System.Data.DataColumn("Normal_Green", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormal_Green);
                this.columnNormal_Bold = new global::System.Data.DataColumn("Normal_Bold", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormal_Bold);
                this.columnTestName_Print = new global::System.Data.DataColumn("TestName_Print", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestName_Print);
                this.columnResult_Print = new global::System.Data.DataColumn("Result_Print", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResult_Print);
                this.columnUnits_Print = new global::System.Data.DataColumn("Units_Print", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnits_Print);
                this.columnNormalRange_Print = new global::System.Data.DataColumn("NormalRange_Print", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormalRange_Print);
                this.columnHeadname_Font = new global::System.Data.DataColumn("Headname_Font", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadname_Font);
                this.columnHeadname_Red = new global::System.Data.DataColumn("Headname_Red", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadname_Red);
                this.columnHeadname_Green = new global::System.Data.DataColumn("Headname_Green", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadname_Green);
                this.columnHeadname_Blue = new global::System.Data.DataColumn("Headname_Blue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadname_Blue);
                this.columnHeadname_Size = new global::System.Data.DataColumn("Headname_Size", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadname_Size);
                this.columnNormal_UL = new global::System.Data.DataColumn("Normal_UL", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormal_UL);
                this.columnXRay_Page = new global::System.Data.DataColumn("XRay_Page", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXRay_Page);
                this.columnAbnormal_Asterik = new global::System.Data.DataColumn("Abnormal_Asterik", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbnormal_Asterik);
                this.columnRequireNewPageAfterHead = new global::System.Data.DataColumn("RequireNewPageAfterHead", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequireNewPageAfterHead);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_FormatRow NewReport_FormatRow() {
                return ((Report_FormatRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Report_FormatRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Report_FormatRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Report_FormatRowChanged != null)) {
                    this.Report_FormatRowChanged(this, new Report_FormatRowChangeEvent(((Report_FormatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Report_FormatRowChanging != null)) {
                    this.Report_FormatRowChanging(this, new Report_FormatRowChangeEvent(((Report_FormatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Report_FormatRowDeleted != null)) {
                    this.Report_FormatRowDeleted(this, new Report_FormatRowChangeEvent(((Report_FormatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Report_FormatRowDeleting != null)) {
                    this.Report_FormatRowDeleting(this, new Report_FormatRowChangeEvent(((Report_FormatRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReport_FormatRow(Report_FormatRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportData ds = new ReportData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Report_FormatDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CultureResultDataTable : global::System.Data.TypedTableBase<CultureResultRow> {
            
            private global::System.Data.DataColumn columnMEDNAME1;
            
            private global::System.Data.DataColumn columnRESULT1;
            
            private global::System.Data.DataColumn columnMEDNAME2;
            
            private global::System.Data.DataColumn columnRESULT2;
            
            private global::System.Data.DataColumn columnGRPNAME;
            
            private global::System.Data.DataColumn columnSNO;
            
            private global::System.Data.DataColumn columnSenstivityAs;
            
            private global::System.Data.DataColumn columnMedicineAs;
            
            private global::System.Data.DataColumn columnUpperHeader;
            
            private global::System.Data.DataColumn columnHeader1;
            
            private global::System.Data.DataColumn columnHeader2;
            
            private global::System.Data.DataColumn columnFooter;
            
            private global::System.Data.DataColumn columnStrile;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnSpecimen;
            
            private global::System.Data.DataColumn columnReportingDate;
            
            private global::System.Data.DataColumn columnSampleDate;
            
            private global::System.Data.DataColumn columnOrganism;
            
            private global::System.Data.DataColumn columnSampleType;
            
            private global::System.Data.DataColumn columnBloodSource;
            
            private global::System.Data.DataColumn columnColonyCount;
            
            private global::System.Data.DataColumn columnIdentification;
            
            private global::System.Data.DataColumn columnReportState;
            
            private global::System.Data.DataColumn columnMethod;
            
            private global::System.Data.DataColumn columnTESTCODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CultureResultDataTable() {
                this.TableName = "CultureResult";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CultureResultDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CultureResultDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEDNAME1Column {
                get {
                    return this.columnMEDNAME1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RESULT1Column {
                get {
                    return this.columnRESULT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MEDNAME2Column {
                get {
                    return this.columnMEDNAME2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RESULT2Column {
                get {
                    return this.columnRESULT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRPNAMEColumn {
                get {
                    return this.columnGRPNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SNOColumn {
                get {
                    return this.columnSNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SenstivityAsColumn {
                get {
                    return this.columnSenstivityAs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MedicineAsColumn {
                get {
                    return this.columnMedicineAs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpperHeaderColumn {
                get {
                    return this.columnUpperHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Header1Column {
                get {
                    return this.columnHeader1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Header2Column {
                get {
                    return this.columnHeader2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FooterColumn {
                get {
                    return this.columnFooter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StrileColumn {
                get {
                    return this.columnStrile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecimenColumn {
                get {
                    return this.columnSpecimen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportingDateColumn {
                get {
                    return this.columnReportingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SampleDateColumn {
                get {
                    return this.columnSampleDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrganismColumn {
                get {
                    return this.columnOrganism;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SampleTypeColumn {
                get {
                    return this.columnSampleType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BloodSourceColumn {
                get {
                    return this.columnBloodSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ColonyCountColumn {
                get {
                    return this.columnColonyCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdentificationColumn {
                get {
                    return this.columnIdentification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportStateColumn {
                get {
                    return this.columnReportState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MethodColumn {
                get {
                    return this.columnMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TESTCODEColumn {
                get {
                    return this.columnTESTCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CultureResultRow this[int index] {
                get {
                    return ((CultureResultRow)(this.Rows[index]));
                }
            }
            
            public event CultureResultRowChangeEventHandler CultureResultRowChanging;
            
            public event CultureResultRowChangeEventHandler CultureResultRowChanged;
            
            public event CultureResultRowChangeEventHandler CultureResultRowDeleting;
            
            public event CultureResultRowChangeEventHandler CultureResultRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCultureResultRow(CultureResultRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CultureResultRow AddCultureResultRow(
                        string MEDNAME1, 
                        string RESULT1, 
                        string MEDNAME2, 
                        string RESULT2, 
                        string GRPNAME, 
                        double SNO, 
                        string SenstivityAs, 
                        string MedicineAs, 
                        string UpperHeader, 
                        string Header1, 
                        string Header2, 
                        string Footer, 
                        string Strile, 
                        string Comment, 
                        string Specimen, 
                        string ReportingDate, 
                        string SampleDate, 
                        string Organism, 
                        string SampleType, 
                        string BloodSource, 
                        string ColonyCount, 
                        string Identification, 
                        string ReportState, 
                        string Method, 
                        string TESTCODE) {
                CultureResultRow rowCultureResultRow = ((CultureResultRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MEDNAME1,
                        RESULT1,
                        MEDNAME2,
                        RESULT2,
                        GRPNAME,
                        SNO,
                        SenstivityAs,
                        MedicineAs,
                        UpperHeader,
                        Header1,
                        Header2,
                        Footer,
                        Strile,
                        Comment,
                        Specimen,
                        ReportingDate,
                        SampleDate,
                        Organism,
                        SampleType,
                        BloodSource,
                        ColonyCount,
                        Identification,
                        ReportState,
                        Method,
                        TESTCODE};
                rowCultureResultRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCultureResultRow);
                return rowCultureResultRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CultureResultDataTable cln = ((CultureResultDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CultureResultDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMEDNAME1 = base.Columns["MEDNAME1"];
                this.columnRESULT1 = base.Columns["RESULT1"];
                this.columnMEDNAME2 = base.Columns["MEDNAME2"];
                this.columnRESULT2 = base.Columns["RESULT2"];
                this.columnGRPNAME = base.Columns["GRPNAME"];
                this.columnSNO = base.Columns["SNO"];
                this.columnSenstivityAs = base.Columns["SenstivityAs"];
                this.columnMedicineAs = base.Columns["MedicineAs"];
                this.columnUpperHeader = base.Columns["UpperHeader"];
                this.columnHeader1 = base.Columns["Header1"];
                this.columnHeader2 = base.Columns["Header2"];
                this.columnFooter = base.Columns["Footer"];
                this.columnStrile = base.Columns["Strile"];
                this.columnComment = base.Columns["Comment"];
                this.columnSpecimen = base.Columns["Specimen"];
                this.columnReportingDate = base.Columns["ReportingDate"];
                this.columnSampleDate = base.Columns["SampleDate"];
                this.columnOrganism = base.Columns["Organism"];
                this.columnSampleType = base.Columns["SampleType"];
                this.columnBloodSource = base.Columns["BloodSource"];
                this.columnColonyCount = base.Columns["ColonyCount"];
                this.columnIdentification = base.Columns["Identification"];
                this.columnReportState = base.Columns["ReportState"];
                this.columnMethod = base.Columns["Method"];
                this.columnTESTCODE = base.Columns["TESTCODE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMEDNAME1 = new global::System.Data.DataColumn("MEDNAME1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEDNAME1);
                this.columnRESULT1 = new global::System.Data.DataColumn("RESULT1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESULT1);
                this.columnMEDNAME2 = new global::System.Data.DataColumn("MEDNAME2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEDNAME2);
                this.columnRESULT2 = new global::System.Data.DataColumn("RESULT2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRESULT2);
                this.columnGRPNAME = new global::System.Data.DataColumn("GRPNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRPNAME);
                this.columnSNO = new global::System.Data.DataColumn("SNO", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSNO);
                this.columnSenstivityAs = new global::System.Data.DataColumn("SenstivityAs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSenstivityAs);
                this.columnMedicineAs = new global::System.Data.DataColumn("MedicineAs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicineAs);
                this.columnUpperHeader = new global::System.Data.DataColumn("UpperHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpperHeader);
                this.columnHeader1 = new global::System.Data.DataColumn("Header1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeader1);
                this.columnHeader2 = new global::System.Data.DataColumn("Header2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeader2);
                this.columnFooter = new global::System.Data.DataColumn("Footer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFooter);
                this.columnStrile = new global::System.Data.DataColumn("Strile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrile);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnSpecimen = new global::System.Data.DataColumn("Specimen", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecimen);
                this.columnReportingDate = new global::System.Data.DataColumn("ReportingDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportingDate);
                this.columnSampleDate = new global::System.Data.DataColumn("SampleDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleDate);
                this.columnOrganism = new global::System.Data.DataColumn("Organism", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganism);
                this.columnSampleType = new global::System.Data.DataColumn("SampleType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleType);
                this.columnBloodSource = new global::System.Data.DataColumn("BloodSource", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodSource);
                this.columnColonyCount = new global::System.Data.DataColumn("ColonyCount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColonyCount);
                this.columnIdentification = new global::System.Data.DataColumn("Identification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdentification);
                this.columnReportState = new global::System.Data.DataColumn("ReportState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportState);
                this.columnMethod = new global::System.Data.DataColumn("Method", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMethod);
                this.columnTESTCODE = new global::System.Data.DataColumn("TESTCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTESTCODE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CultureResultRow NewCultureResultRow() {
                return ((CultureResultRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CultureResultRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CultureResultRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CultureResultRowChanged != null)) {
                    this.CultureResultRowChanged(this, new CultureResultRowChangeEvent(((CultureResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CultureResultRowChanging != null)) {
                    this.CultureResultRowChanging(this, new CultureResultRowChangeEvent(((CultureResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CultureResultRowDeleted != null)) {
                    this.CultureResultRowDeleted(this, new CultureResultRowChangeEvent(((CultureResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CultureResultRowDeleting != null)) {
                    this.CultureResultRowDeleting(this, new CultureResultRowChangeEvent(((CultureResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCultureResultRow(CultureResultRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ReportData ds = new ReportData();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CultureResultDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Report_TableRow : global::System.Data.DataRow {
            
            private Report_TableDataTable tableReport_Table;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Report_TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReport_Table = ((Report_TableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codepk {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.codepkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codepk\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.codepkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string printpos {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.printposColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'printpos\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.printposColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string booksno {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.booksnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'booksno\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.booksnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hcodepos {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.hcodeposColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hcodepos\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.hcodeposColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sno {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.snoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sno\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.snoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string testcode {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.testcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'testcode\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.testcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cultsno {
                get {
                    try {
                        return ((int)(this[this.tableReport_Table.cultsnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cultsno\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.cultsnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string labno {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.labnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'labno\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.labnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hcode {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.hcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hcode\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.hcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hcodesno {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.hcodesnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hcodesno\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.hcodesnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HName {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.HNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HName\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.HNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string grpcode {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.grpcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'grpcode\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.grpcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string grpname {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.grpnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'grpname\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.grpnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tname {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.tnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tname\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.tnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string units {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.unitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'units\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.unitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NORANGE {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.NORANGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NORANGE\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.NORANGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LBOUND {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.LBOUNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LBOUND\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.LBOUNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UBOUND {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.UBOUNDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UBOUND\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.UBOUNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row1 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row1\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row2 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row2\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row3 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row3\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row4 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row4\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row5 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row5\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row6 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row6\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row7 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row7\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row1val1 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row1val1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row1val1\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row1val1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row1val2 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row1val2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row1val2\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row1val2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row1val3 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row1val3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row1val3\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row1val3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row1val4 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row1val4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row1val4\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row1val4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row1val5 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row1val5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row1val5\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row1val5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row1val6 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row1val6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row1val6\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row1val6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row2val1 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row2val1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row2val1\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row2val1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row2val2 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row2val2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row2val2\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row2val2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row2val3 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row2val3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row2val3\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row2val3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row2val4 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row2val4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row2val4\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row2val4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row2val5 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row2val5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row2val5\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row2val5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row2val6 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row2val6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row2val6\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row2val6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row3val1 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row3val1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row3val1\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row3val1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row3val2 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row3val2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row3val2\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row3val2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row3val3 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row3val3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row3val3\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row3val3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row3val4 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row3val4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row3val4\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row3val4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row3val5 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row3val5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row3val5\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row3val5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row3val6 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row3val6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row3val6\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row3val6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row4val1 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row4val1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row4val1\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row4val1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row4val2 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row4val2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row4val2\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row4val2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row4val3 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row4val3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row4val3\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row4val3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row4val4 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row4val4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row4val4\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row4val4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row4val5 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row4val5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row4val5\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row4val5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row4val6 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row4val6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row4val6\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row4val6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row5val1 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row5val1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row5val1\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row5val1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row5val2 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row5val2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row5val2\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row5val2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row5val3 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row5val3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row5val3\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row5val3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row5val4 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row5val4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row5val4\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row5val4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row5val5 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row5val5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row5val5\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row5val5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row5val6 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row5val6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row5val6\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row5val6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row6val1 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row6val1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row6val1\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row6val1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row6val2 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row6val2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row6val2\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row6val2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row6val3 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row6val3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row6val3\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row6val3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row6val4 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row6val4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row6val4\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row6val4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row6val5 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row6val5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row6val5\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row6val5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row6val6 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row6val6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row6val6\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row6val6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row7val1 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row7val1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row7val1\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row7val1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row7val2 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row7val2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row7val2\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row7val2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row7val3 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row7val3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row7val3\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row7val3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row7val4 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row7val4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row7val4\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row7val4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row7val5 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row7val5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row7val5\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row7val5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Row7val6 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.Row7val6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Row7val6\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.Row7val6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tval {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.tvalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tval\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.tvalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string comments {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.commentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'comments\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.commentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTP {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.INTPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INTP\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.INTPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIGN {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.SIGNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIGN\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.SIGNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EOR {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.EORColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EOR\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.EORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remrep {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.RemrepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remrep\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.RemrepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IFINTP {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.IFINTPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IFINTP\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.IFINTPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IFCOMM {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.IFCOMMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IFCOMM\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.IFCOMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string abnormal {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.abnormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'abnormal\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.abnormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HEADVAL {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.HEADVALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HEADVAL\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.HEADVALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYP {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.TYPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYP\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.TYPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string med1 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.med1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'med1\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.med1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string med2 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.med2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'med2\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.med2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string med3 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.med3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'med3\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.med3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string senst {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.senstColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'senst\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.senstColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bookedunder {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.BookedunderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bookedunder\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.BookedunderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REPWNHD {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.REPWNHDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REPWNHD\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.REPWNHDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REPWNFT {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.REPWNFTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REPWNFT\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.REPWNFTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShowRow1 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.ShowRow1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShowRow1\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.ShowRow1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShowRow2 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.ShowRow2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShowRow2\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.ShowRow2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShowRow3 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.ShowRow3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShowRow3\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.ShowRow3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShowRow4 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.ShowRow4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShowRow4\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.ShowRow4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShowRow5 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.ShowRow5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShowRow5\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.ShowRow5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShowRow6 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.ShowRow6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShowRow6\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.ShowRow6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShowRow7 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.ShowRow7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShowRow7\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.ShowRow7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PrevType {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table.PrevTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevType\' in table \'Report Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table.PrevTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodepkNull() {
                return this.IsNull(this.tableReport_Table.codepkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodepkNull() {
                this[this.tableReport_Table.codepkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsprintposNull() {
                return this.IsNull(this.tableReport_Table.printposColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetprintposNull() {
                this[this.tableReport_Table.printposColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbooksnoNull() {
                return this.IsNull(this.tableReport_Table.booksnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbooksnoNull() {
                this[this.tableReport_Table.booksnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshcodeposNull() {
                return this.IsNull(this.tableReport_Table.hcodeposColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethcodeposNull() {
                this[this.tableReport_Table.hcodeposColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssnoNull() {
                return this.IsNull(this.tableReport_Table.snoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsnoNull() {
                this[this.tableReport_Table.snoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstestcodeNull() {
                return this.IsNull(this.tableReport_Table.testcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettestcodeNull() {
                this[this.tableReport_Table.testcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscultsnoNull() {
                return this.IsNull(this.tableReport_Table.cultsnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcultsnoNull() {
                this[this.tableReport_Table.cultsnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslabnoNull() {
                return this.IsNull(this.tableReport_Table.labnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlabnoNull() {
                this[this.tableReport_Table.labnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshcodeNull() {
                return this.IsNull(this.tableReport_Table.hcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethcodeNull() {
                this[this.tableReport_Table.hcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshcodesnoNull() {
                return this.IsNull(this.tableReport_Table.hcodesnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethcodesnoNull() {
                this[this.tableReport_Table.hcodesnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHNameNull() {
                return this.IsNull(this.tableReport_Table.HNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHNameNull() {
                this[this.tableReport_Table.HNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrpcodeNull() {
                return this.IsNull(this.tableReport_Table.grpcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrpcodeNull() {
                this[this.tableReport_Table.grpcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrpnameNull() {
                return this.IsNull(this.tableReport_Table.grpnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrpnameNull() {
                this[this.tableReport_Table.grpnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstnameNull() {
                return this.IsNull(this.tableReport_Table.tnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettnameNull() {
                this[this.tableReport_Table.tnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunitsNull() {
                return this.IsNull(this.tableReport_Table.unitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunitsNull() {
                this[this.tableReport_Table.unitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNORANGENull() {
                return this.IsNull(this.tableReport_Table.NORANGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNORANGENull() {
                this[this.tableReport_Table.NORANGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLBOUNDNull() {
                return this.IsNull(this.tableReport_Table.LBOUNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLBOUNDNull() {
                this[this.tableReport_Table.LBOUNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUBOUNDNull() {
                return this.IsNull(this.tableReport_Table.UBOUNDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUBOUNDNull() {
                this[this.tableReport_Table.UBOUNDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow1Null() {
                return this.IsNull(this.tableReport_Table.Row1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow1Null() {
                this[this.tableReport_Table.Row1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow2Null() {
                return this.IsNull(this.tableReport_Table.Row2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow2Null() {
                this[this.tableReport_Table.Row2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow3Null() {
                return this.IsNull(this.tableReport_Table.Row3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow3Null() {
                this[this.tableReport_Table.Row3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow4Null() {
                return this.IsNull(this.tableReport_Table.Row4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow4Null() {
                this[this.tableReport_Table.Row4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow5Null() {
                return this.IsNull(this.tableReport_Table.Row5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow5Null() {
                this[this.tableReport_Table.Row5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow6Null() {
                return this.IsNull(this.tableReport_Table.Row6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow6Null() {
                this[this.tableReport_Table.Row6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow7Null() {
                return this.IsNull(this.tableReport_Table.Row7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow7Null() {
                this[this.tableReport_Table.Row7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow1val1Null() {
                return this.IsNull(this.tableReport_Table.Row1val1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow1val1Null() {
                this[this.tableReport_Table.Row1val1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow1val2Null() {
                return this.IsNull(this.tableReport_Table.Row1val2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow1val2Null() {
                this[this.tableReport_Table.Row1val2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow1val3Null() {
                return this.IsNull(this.tableReport_Table.Row1val3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow1val3Null() {
                this[this.tableReport_Table.Row1val3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow1val4Null() {
                return this.IsNull(this.tableReport_Table.Row1val4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow1val4Null() {
                this[this.tableReport_Table.Row1val4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow1val5Null() {
                return this.IsNull(this.tableReport_Table.Row1val5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow1val5Null() {
                this[this.tableReport_Table.Row1val5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow1val6Null() {
                return this.IsNull(this.tableReport_Table.Row1val6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow1val6Null() {
                this[this.tableReport_Table.Row1val6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow2val1Null() {
                return this.IsNull(this.tableReport_Table.Row2val1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow2val1Null() {
                this[this.tableReport_Table.Row2val1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow2val2Null() {
                return this.IsNull(this.tableReport_Table.Row2val2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow2val2Null() {
                this[this.tableReport_Table.Row2val2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow2val3Null() {
                return this.IsNull(this.tableReport_Table.Row2val3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow2val3Null() {
                this[this.tableReport_Table.Row2val3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow2val4Null() {
                return this.IsNull(this.tableReport_Table.Row2val4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow2val4Null() {
                this[this.tableReport_Table.Row2val4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow2val5Null() {
                return this.IsNull(this.tableReport_Table.Row2val5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow2val5Null() {
                this[this.tableReport_Table.Row2val5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow2val6Null() {
                return this.IsNull(this.tableReport_Table.Row2val6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow2val6Null() {
                this[this.tableReport_Table.Row2val6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow3val1Null() {
                return this.IsNull(this.tableReport_Table.Row3val1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow3val1Null() {
                this[this.tableReport_Table.Row3val1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow3val2Null() {
                return this.IsNull(this.tableReport_Table.Row3val2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow3val2Null() {
                this[this.tableReport_Table.Row3val2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow3val3Null() {
                return this.IsNull(this.tableReport_Table.Row3val3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow3val3Null() {
                this[this.tableReport_Table.Row3val3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow3val4Null() {
                return this.IsNull(this.tableReport_Table.Row3val4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow3val4Null() {
                this[this.tableReport_Table.Row3val4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow3val5Null() {
                return this.IsNull(this.tableReport_Table.Row3val5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow3val5Null() {
                this[this.tableReport_Table.Row3val5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow3val6Null() {
                return this.IsNull(this.tableReport_Table.Row3val6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow3val6Null() {
                this[this.tableReport_Table.Row3val6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow4val1Null() {
                return this.IsNull(this.tableReport_Table.Row4val1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow4val1Null() {
                this[this.tableReport_Table.Row4val1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow4val2Null() {
                return this.IsNull(this.tableReport_Table.Row4val2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow4val2Null() {
                this[this.tableReport_Table.Row4val2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow4val3Null() {
                return this.IsNull(this.tableReport_Table.Row4val3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow4val3Null() {
                this[this.tableReport_Table.Row4val3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow4val4Null() {
                return this.IsNull(this.tableReport_Table.Row4val4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow4val4Null() {
                this[this.tableReport_Table.Row4val4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow4val5Null() {
                return this.IsNull(this.tableReport_Table.Row4val5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow4val5Null() {
                this[this.tableReport_Table.Row4val5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow4val6Null() {
                return this.IsNull(this.tableReport_Table.Row4val6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow4val6Null() {
                this[this.tableReport_Table.Row4val6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow5val1Null() {
                return this.IsNull(this.tableReport_Table.Row5val1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow5val1Null() {
                this[this.tableReport_Table.Row5val1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow5val2Null() {
                return this.IsNull(this.tableReport_Table.Row5val2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow5val2Null() {
                this[this.tableReport_Table.Row5val2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow5val3Null() {
                return this.IsNull(this.tableReport_Table.Row5val3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow5val3Null() {
                this[this.tableReport_Table.Row5val3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow5val4Null() {
                return this.IsNull(this.tableReport_Table.Row5val4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow5val4Null() {
                this[this.tableReport_Table.Row5val4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow5val5Null() {
                return this.IsNull(this.tableReport_Table.Row5val5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow5val5Null() {
                this[this.tableReport_Table.Row5val5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow5val6Null() {
                return this.IsNull(this.tableReport_Table.Row5val6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow5val6Null() {
                this[this.tableReport_Table.Row5val6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow6val1Null() {
                return this.IsNull(this.tableReport_Table.Row6val1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow6val1Null() {
                this[this.tableReport_Table.Row6val1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow6val2Null() {
                return this.IsNull(this.tableReport_Table.Row6val2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow6val2Null() {
                this[this.tableReport_Table.Row6val2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow6val3Null() {
                return this.IsNull(this.tableReport_Table.Row6val3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow6val3Null() {
                this[this.tableReport_Table.Row6val3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow6val4Null() {
                return this.IsNull(this.tableReport_Table.Row6val4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow6val4Null() {
                this[this.tableReport_Table.Row6val4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow6val5Null() {
                return this.IsNull(this.tableReport_Table.Row6val5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow6val5Null() {
                this[this.tableReport_Table.Row6val5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow6val6Null() {
                return this.IsNull(this.tableReport_Table.Row6val6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow6val6Null() {
                this[this.tableReport_Table.Row6val6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow7val1Null() {
                return this.IsNull(this.tableReport_Table.Row7val1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow7val1Null() {
                this[this.tableReport_Table.Row7val1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow7val2Null() {
                return this.IsNull(this.tableReport_Table.Row7val2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow7val2Null() {
                this[this.tableReport_Table.Row7val2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow7val3Null() {
                return this.IsNull(this.tableReport_Table.Row7val3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow7val3Null() {
                this[this.tableReport_Table.Row7val3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow7val4Null() {
                return this.IsNull(this.tableReport_Table.Row7val4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow7val4Null() {
                this[this.tableReport_Table.Row7val4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow7val5Null() {
                return this.IsNull(this.tableReport_Table.Row7val5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow7val5Null() {
                this[this.tableReport_Table.Row7val5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRow7val6Null() {
                return this.IsNull(this.tableReport_Table.Row7val6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRow7val6Null() {
                this[this.tableReport_Table.Row7val6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstvalNull() {
                return this.IsNull(this.tableReport_Table.tvalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettvalNull() {
                this[this.tableReport_Table.tvalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscommentsNull() {
                return this.IsNull(this.tableReport_Table.commentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcommentsNull() {
                this[this.tableReport_Table.commentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINTPNull() {
                return this.IsNull(this.tableReport_Table.INTPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINTPNull() {
                this[this.tableReport_Table.INTPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIGNNull() {
                return this.IsNull(this.tableReport_Table.SIGNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIGNNull() {
                this[this.tableReport_Table.SIGNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEORNull() {
                return this.IsNull(this.tableReport_Table.EORColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEORNull() {
                this[this.tableReport_Table.EORColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableReport_Table.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableReport_Table.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemrepNull() {
                return this.IsNull(this.tableReport_Table.RemrepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemrepNull() {
                this[this.tableReport_Table.RemrepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIFINTPNull() {
                return this.IsNull(this.tableReport_Table.IFINTPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIFINTPNull() {
                this[this.tableReport_Table.IFINTPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIFCOMMNull() {
                return this.IsNull(this.tableReport_Table.IFCOMMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIFCOMMNull() {
                this[this.tableReport_Table.IFCOMMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsabnormalNull() {
                return this.IsNull(this.tableReport_Table.abnormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetabnormalNull() {
                this[this.tableReport_Table.abnormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHEADVALNull() {
                return this.IsNull(this.tableReport_Table.HEADVALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHEADVALNull() {
                this[this.tableReport_Table.HEADVALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPNull() {
                return this.IsNull(this.tableReport_Table.TYPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPNull() {
                this[this.tableReport_Table.TYPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismed1Null() {
                return this.IsNull(this.tableReport_Table.med1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmed1Null() {
                this[this.tableReport_Table.med1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismed2Null() {
                return this.IsNull(this.tableReport_Table.med2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmed2Null() {
                this[this.tableReport_Table.med2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismed3Null() {
                return this.IsNull(this.tableReport_Table.med3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmed3Null() {
                this[this.tableReport_Table.med3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssenstNull() {
                return this.IsNull(this.tableReport_Table.senstColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsenstNull() {
                this[this.tableReport_Table.senstColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookedunderNull() {
                return this.IsNull(this.tableReport_Table.BookedunderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookedunderNull() {
                this[this.tableReport_Table.BookedunderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREPWNHDNull() {
                return this.IsNull(this.tableReport_Table.REPWNHDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREPWNHDNull() {
                this[this.tableReport_Table.REPWNHDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREPWNFTNull() {
                return this.IsNull(this.tableReport_Table.REPWNFTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREPWNFTNull() {
                this[this.tableReport_Table.REPWNFTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShowRow1Null() {
                return this.IsNull(this.tableReport_Table.ShowRow1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShowRow1Null() {
                this[this.tableReport_Table.ShowRow1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShowRow2Null() {
                return this.IsNull(this.tableReport_Table.ShowRow2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShowRow2Null() {
                this[this.tableReport_Table.ShowRow2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShowRow3Null() {
                return this.IsNull(this.tableReport_Table.ShowRow3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShowRow3Null() {
                this[this.tableReport_Table.ShowRow3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShowRow4Null() {
                return this.IsNull(this.tableReport_Table.ShowRow4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShowRow4Null() {
                this[this.tableReport_Table.ShowRow4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShowRow5Null() {
                return this.IsNull(this.tableReport_Table.ShowRow5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShowRow5Null() {
                this[this.tableReport_Table.ShowRow5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShowRow6Null() {
                return this.IsNull(this.tableReport_Table.ShowRow6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShowRow6Null() {
                this[this.tableReport_Table.ShowRow6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShowRow7Null() {
                return this.IsNull(this.tableReport_Table.ShowRow7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShowRow7Null() {
                this[this.tableReport_Table.ShowRow7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrevTypeNull() {
                return this.IsNull(this.tableReport_Table.PrevTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrevTypeNull() {
                this[this.tableReport_Table.PrevTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Report_Table2Row : global::System.Data.DataRow {
            
            private Report_Table2DataTable tableReport_Table2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Report_Table2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReport_Table2 = ((Report_Table2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string grpcode {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table2.grpcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'grpcode\' in table \'Report_Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table2.grpcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string grpname {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table2.grpnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'grpname\' in table \'Report_Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table2.grpnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hcodepos {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table2.hcodeposColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hcodepos\' in table \'Report_Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table2.hcodeposColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string codepk {
                get {
                    try {
                        return ((string)(this[this.tableReport_Table2.codepkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'codepk\' in table \'Report_Table2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Table2.codepkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrpcodeNull() {
                return this.IsNull(this.tableReport_Table2.grpcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrpcodeNull() {
                this[this.tableReport_Table2.grpcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgrpnameNull() {
                return this.IsNull(this.tableReport_Table2.grpnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgrpnameNull() {
                this[this.tableReport_Table2.grpnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshcodeposNull() {
                return this.IsNull(this.tableReport_Table2.hcodeposColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethcodeposNull() {
                this[this.tableReport_Table2.hcodeposColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscodepkNull() {
                return this.IsNull(this.tableReport_Table2.codepkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcodepkNull() {
                this[this.tableReport_Table2.codepkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Report_HeaderRow : global::System.Data.DataRow {
            
            private Report_HeaderDataTable tableReport_Header;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Report_HeaderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReport_Header = ((Report_HeaderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PatName {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.PatNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatName\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.PatNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Age {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sex {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.SexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sex\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.SexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegnNo {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.RegnNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegnNo\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.RegnNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LabNo {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.LabNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabNo\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.LabNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PatCode {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.PatCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatCode\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.PatCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferBy {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.ReferByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferBy\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.ReferByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Header {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.HeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Header\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.HeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FooterHeight {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.FooterHeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FooterHeight\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.FooterHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Footer {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.FooterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Footer\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.FooterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] LogoImage {
                get {
                    try {
                        return ((byte[])(this[this.tableReport_Header.LogoImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogoImage\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.LogoImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string logotp {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.logotpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'logotp\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.logotpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string logolft {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.logolftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'logolft\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.logolftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string logowid {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.logowidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'logowid\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.logowidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string logoht {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.logohtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'logoht\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.logohtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string islogo {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.islogoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'islogo\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.islogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SignImage {
                get {
                    try {
                        return ((byte[])(this[this.tableReport_Header.SignImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SignImage\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.SignImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIlft {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.SIlftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIlft\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.SIlftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SItop {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.SItopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SItop\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.SItopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIwd {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.SIwdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIwd\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.SIwdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SIht {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.SIhtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIht\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.SIhtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ConsSign {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.ConsSignColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsSign\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.ConsSignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApprovedBy {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.ApprovedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedBy\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.ApprovedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApprovedTime {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.ApprovedTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedTime\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.ApprovedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int showAppr {
                get {
                    try {
                        return ((int)(this[this.tableReport_Header.showApprColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'showAppr\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.showApprColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int showApptime {
                get {
                    try {
                        return ((int)(this[this.tableReport_Header.showApptimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'showApptime\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.showApptimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ApprovedbyLeft {
                get {
                    try {
                        return ((double)(this[this.tableReport_Header.ApprovedbyLeftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedbyLeft\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.ApprovedbyLeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ApprovedBytop {
                get {
                    try {
                        return ((double)(this[this.tableReport_Header.ApprovedBytopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedBytop\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.ApprovedBytopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ApptimeTop {
                get {
                    try {
                        return ((double)(this[this.tableReport_Header.ApptimeTopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApptimeTop\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.ApptimeTopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] WEBSIGNIMAGE {
                get {
                    try {
                        return ((byte[])(this[this.tableReport_Header.WEBSIGNIMAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WEBSIGNIMAGE\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.WEBSIGNIMAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AppTimeLeft {
                get {
                    try {
                        return ((double)(this[this.tableReport_Header.AppTimeLeftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppTimeLeft\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.AppTimeLeftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WEBLOGOHT {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.WEBLOGOHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WEBLOGOHT\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.WEBLOGOHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WEBLOGOLT {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.WEBLOGOLTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WEBLOGOLT\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.WEBLOGOLTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WEBLOGOTOP {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.WEBLOGOTOPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WEBLOGOTOP\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.WEBLOGOTOPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WEBLOGOWID {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.WEBLOGOWIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WEBLOGOWID\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.WEBLOGOWIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn1 {
                get {
                    try {
                        return ((string)(this[this.tableReport_Header.DataColumn1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataColumn1\' in table \'Report_Header\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Header.DataColumn1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPatNameNull() {
                return this.IsNull(this.tableReport_Header.PatNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPatNameNull() {
                this[this.tableReport_Header.PatNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeNull() {
                return this.IsNull(this.tableReport_Header.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeNull() {
                this[this.tableReport_Header.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSexNull() {
                return this.IsNull(this.tableReport_Header.SexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSexNull() {
                this[this.tableReport_Header.SexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableReport_Header.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableReport_Header.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegnNoNull() {
                return this.IsNull(this.tableReport_Header.RegnNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegnNoNull() {
                this[this.tableReport_Header.RegnNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLabNoNull() {
                return this.IsNull(this.tableReport_Header.LabNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLabNoNull() {
                this[this.tableReport_Header.LabNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPatCodeNull() {
                return this.IsNull(this.tableReport_Header.PatCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPatCodeNull() {
                this[this.tableReport_Header.PatCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferByNull() {
                return this.IsNull(this.tableReport_Header.ReferByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferByNull() {
                this[this.tableReport_Header.ReferByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderNull() {
                return this.IsNull(this.tableReport_Header.HeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderNull() {
                this[this.tableReport_Header.HeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFooterHeightNull() {
                return this.IsNull(this.tableReport_Header.FooterHeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFooterHeightNull() {
                this[this.tableReport_Header.FooterHeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFooterNull() {
                return this.IsNull(this.tableReport_Header.FooterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFooterNull() {
                this[this.tableReport_Header.FooterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogoImageNull() {
                return this.IsNull(this.tableReport_Header.LogoImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogoImageNull() {
                this[this.tableReport_Header.LogoImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslogotpNull() {
                return this.IsNull(this.tableReport_Header.logotpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlogotpNull() {
                this[this.tableReport_Header.logotpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslogolftNull() {
                return this.IsNull(this.tableReport_Header.logolftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlogolftNull() {
                this[this.tableReport_Header.logolftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslogowidNull() {
                return this.IsNull(this.tableReport_Header.logowidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlogowidNull() {
                this[this.tableReport_Header.logowidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslogohtNull() {
                return this.IsNull(this.tableReport_Header.logohtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlogohtNull() {
                this[this.tableReport_Header.logohtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsislogoNull() {
                return this.IsNull(this.tableReport_Header.islogoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetislogoNull() {
                this[this.tableReport_Header.islogoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSignImageNull() {
                return this.IsNull(this.tableReport_Header.SignImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSignImageNull() {
                this[this.tableReport_Header.SignImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIlftNull() {
                return this.IsNull(this.tableReport_Header.SIlftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIlftNull() {
                this[this.tableReport_Header.SIlftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSItopNull() {
                return this.IsNull(this.tableReport_Header.SItopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSItopNull() {
                this[this.tableReport_Header.SItopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIwdNull() {
                return this.IsNull(this.tableReport_Header.SIwdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIwdNull() {
                this[this.tableReport_Header.SIwdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIhtNull() {
                return this.IsNull(this.tableReport_Header.SIhtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIhtNull() {
                this[this.tableReport_Header.SIhtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsSignNull() {
                return this.IsNull(this.tableReport_Header.ConsSignColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsSignNull() {
                this[this.tableReport_Header.ConsSignColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedByNull() {
                return this.IsNull(this.tableReport_Header.ApprovedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedByNull() {
                this[this.tableReport_Header.ApprovedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedTimeNull() {
                return this.IsNull(this.tableReport_Header.ApprovedTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedTimeNull() {
                this[this.tableReport_Header.ApprovedTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshowApprNull() {
                return this.IsNull(this.tableReport_Header.showApprColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshowApprNull() {
                this[this.tableReport_Header.showApprColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsshowApptimeNull() {
                return this.IsNull(this.tableReport_Header.showApptimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetshowApptimeNull() {
                this[this.tableReport_Header.showApptimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedbyLeftNull() {
                return this.IsNull(this.tableReport_Header.ApprovedbyLeftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedbyLeftNull() {
                this[this.tableReport_Header.ApprovedbyLeftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApprovedBytopNull() {
                return this.IsNull(this.tableReport_Header.ApprovedBytopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApprovedBytopNull() {
                this[this.tableReport_Header.ApprovedBytopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApptimeTopNull() {
                return this.IsNull(this.tableReport_Header.ApptimeTopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApptimeTopNull() {
                this[this.tableReport_Header.ApptimeTopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWEBSIGNIMAGENull() {
                return this.IsNull(this.tableReport_Header.WEBSIGNIMAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWEBSIGNIMAGENull() {
                this[this.tableReport_Header.WEBSIGNIMAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppTimeLeftNull() {
                return this.IsNull(this.tableReport_Header.AppTimeLeftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppTimeLeftNull() {
                this[this.tableReport_Header.AppTimeLeftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWEBLOGOHTNull() {
                return this.IsNull(this.tableReport_Header.WEBLOGOHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWEBLOGOHTNull() {
                this[this.tableReport_Header.WEBLOGOHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWEBLOGOLTNull() {
                return this.IsNull(this.tableReport_Header.WEBLOGOLTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWEBLOGOLTNull() {
                this[this.tableReport_Header.WEBLOGOLTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWEBLOGOTOPNull() {
                return this.IsNull(this.tableReport_Header.WEBLOGOTOPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWEBLOGOTOPNull() {
                this[this.tableReport_Header.WEBLOGOTOPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWEBLOGOWIDNull() {
                return this.IsNull(this.tableReport_Header.WEBLOGOWIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWEBLOGOWIDNull() {
                this[this.tableReport_Header.WEBLOGOWIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn1Null() {
                return this.IsNull(this.tableReport_Header.DataColumn1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn1Null() {
                this[this.tableReport_Header.DataColumn1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Report_FormatRow : global::System.Data.DataRow {
            
            private Report_FormatDataTable tableReport_Format;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Report_FormatRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReport_Format = ((Report_FormatDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Abnormal_Red {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Abnormal_RedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abnormal_Red\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Abnormal_RedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Abnormal_Green {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Abnormal_GreenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abnormal_Green\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Abnormal_GreenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Abnormal_Blue {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Abnormal_BlueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abnormal_Blue\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Abnormal_BlueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Abnormal_Bold {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Abnormal_BoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abnormal_Bold\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Abnormal_BoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Abnormal_UL {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Abnormal_ULColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abnormal_UL\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Abnormal_ULColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Detail_Font {
                get {
                    try {
                        return ((string)(this[this.tableReport_Format.Detail_FontColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Detail_Font\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Detail_FontColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Detail_Size {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Detail_SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Detail_Size\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Detail_SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Detail_Red {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Detail_RedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Detail_Red\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Detail_RedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Detail_Blue {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Detail_BlueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Detail_Blue\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Detail_BlueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Detail_Green {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Detail_GreenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Detail_Green\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Detail_GreenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Normal_Red {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Normal_RedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Normal_Red\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Normal_RedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Normal_Blue {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Normal_BlueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Normal_Blue\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Normal_BlueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Normal_Green {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Normal_GreenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Normal_Green\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Normal_GreenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Normal_Bold {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Normal_BoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Normal_Bold\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Normal_BoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TestName_Print {
                get {
                    try {
                        return ((string)(this[this.tableReport_Format.TestName_PrintColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestName_Print\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.TestName_PrintColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Result_Print {
                get {
                    try {
                        return ((string)(this[this.tableReport_Format.Result_PrintColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Result_Print\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Result_PrintColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Units_Print {
                get {
                    try {
                        return ((string)(this[this.tableReport_Format.Units_PrintColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Units_Print\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Units_PrintColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NormalRange_Print {
                get {
                    try {
                        return ((string)(this[this.tableReport_Format.NormalRange_PrintColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NormalRange_Print\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.NormalRange_PrintColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Headname_Font {
                get {
                    try {
                        return ((string)(this[this.tableReport_Format.Headname_FontColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Headname_Font\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Headname_FontColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Headname_Red {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Headname_RedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Headname_Red\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Headname_RedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Headname_Green {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Headname_GreenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Headname_Green\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Headname_GreenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Headname_Blue {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Headname_BlueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Headname_Blue\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Headname_BlueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Headname_Size {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Headname_SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Headname_Size\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Headname_SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Normal_UL {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Normal_ULColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Normal_UL\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Normal_ULColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int XRay_Page {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.XRay_PageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XRay_Page\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.XRay_PageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Abnormal_Asterik {
                get {
                    try {
                        return ((int)(this[this.tableReport_Format.Abnormal_AsterikColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Abnormal_Asterik\' in table \'Report_Format\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReport_Format.Abnormal_AsterikColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short RequireNewPageAfterHead {
                get {
                    try {
                        return ((short)(this[this.tableReport_Format.RequireNewPageAfterHeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequireNewPageAfterHead\' in table \'Report_Format\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableReport_Format.RequireNewPageAfterHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbnormal_RedNull() {
                return this.IsNull(this.tableReport_Format.Abnormal_RedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbnormal_RedNull() {
                this[this.tableReport_Format.Abnormal_RedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbnormal_GreenNull() {
                return this.IsNull(this.tableReport_Format.Abnormal_GreenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbnormal_GreenNull() {
                this[this.tableReport_Format.Abnormal_GreenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbnormal_BlueNull() {
                return this.IsNull(this.tableReport_Format.Abnormal_BlueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbnormal_BlueNull() {
                this[this.tableReport_Format.Abnormal_BlueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbnormal_BoldNull() {
                return this.IsNull(this.tableReport_Format.Abnormal_BoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbnormal_BoldNull() {
                this[this.tableReport_Format.Abnormal_BoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbnormal_ULNull() {
                return this.IsNull(this.tableReport_Format.Abnormal_ULColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbnormal_ULNull() {
                this[this.tableReport_Format.Abnormal_ULColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetail_FontNull() {
                return this.IsNull(this.tableReport_Format.Detail_FontColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetail_FontNull() {
                this[this.tableReport_Format.Detail_FontColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetail_SizeNull() {
                return this.IsNull(this.tableReport_Format.Detail_SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetail_SizeNull() {
                this[this.tableReport_Format.Detail_SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetail_RedNull() {
                return this.IsNull(this.tableReport_Format.Detail_RedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetail_RedNull() {
                this[this.tableReport_Format.Detail_RedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetail_BlueNull() {
                return this.IsNull(this.tableReport_Format.Detail_BlueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetail_BlueNull() {
                this[this.tableReport_Format.Detail_BlueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetail_GreenNull() {
                return this.IsNull(this.tableReport_Format.Detail_GreenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetail_GreenNull() {
                this[this.tableReport_Format.Detail_GreenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNormal_RedNull() {
                return this.IsNull(this.tableReport_Format.Normal_RedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNormal_RedNull() {
                this[this.tableReport_Format.Normal_RedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNormal_BlueNull() {
                return this.IsNull(this.tableReport_Format.Normal_BlueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNormal_BlueNull() {
                this[this.tableReport_Format.Normal_BlueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNormal_GreenNull() {
                return this.IsNull(this.tableReport_Format.Normal_GreenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNormal_GreenNull() {
                this[this.tableReport_Format.Normal_GreenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNormal_BoldNull() {
                return this.IsNull(this.tableReport_Format.Normal_BoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNormal_BoldNull() {
                this[this.tableReport_Format.Normal_BoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTestName_PrintNull() {
                return this.IsNull(this.tableReport_Format.TestName_PrintColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTestName_PrintNull() {
                this[this.tableReport_Format.TestName_PrintColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResult_PrintNull() {
                return this.IsNull(this.tableReport_Format.Result_PrintColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResult_PrintNull() {
                this[this.tableReport_Format.Result_PrintColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnits_PrintNull() {
                return this.IsNull(this.tableReport_Format.Units_PrintColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnits_PrintNull() {
                this[this.tableReport_Format.Units_PrintColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNormalRange_PrintNull() {
                return this.IsNull(this.tableReport_Format.NormalRange_PrintColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNormalRange_PrintNull() {
                this[this.tableReport_Format.NormalRange_PrintColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadname_FontNull() {
                return this.IsNull(this.tableReport_Format.Headname_FontColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadname_FontNull() {
                this[this.tableReport_Format.Headname_FontColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadname_RedNull() {
                return this.IsNull(this.tableReport_Format.Headname_RedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadname_RedNull() {
                this[this.tableReport_Format.Headname_RedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadname_GreenNull() {
                return this.IsNull(this.tableReport_Format.Headname_GreenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadname_GreenNull() {
                this[this.tableReport_Format.Headname_GreenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadname_BlueNull() {
                return this.IsNull(this.tableReport_Format.Headname_BlueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadname_BlueNull() {
                this[this.tableReport_Format.Headname_BlueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeadname_SizeNull() {
                return this.IsNull(this.tableReport_Format.Headname_SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeadname_SizeNull() {
                this[this.tableReport_Format.Headname_SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNormal_ULNull() {
                return this.IsNull(this.tableReport_Format.Normal_ULColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNormal_ULNull() {
                this[this.tableReport_Format.Normal_ULColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXRay_PageNull() {
                return this.IsNull(this.tableReport_Format.XRay_PageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXRay_PageNull() {
                this[this.tableReport_Format.XRay_PageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAbnormal_AsterikNull() {
                return this.IsNull(this.tableReport_Format.Abnormal_AsterikColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAbnormal_AsterikNull() {
                this[this.tableReport_Format.Abnormal_AsterikColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequireNewPageAfterHeadNull() {
                return this.IsNull(this.tableReport_Format.RequireNewPageAfterHeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequireNewPageAfterHeadNull() {
                this[this.tableReport_Format.RequireNewPageAfterHeadColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CultureResultRow : global::System.Data.DataRow {
            
            private CultureResultDataTable tableCultureResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CultureResultRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCultureResult = ((CultureResultDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEDNAME1 {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.MEDNAME1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEDNAME1\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.MEDNAME1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RESULT1 {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.RESULT1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RESULT1\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.RESULT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MEDNAME2 {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.MEDNAME2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MEDNAME2\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.MEDNAME2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RESULT2 {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.RESULT2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RESULT2\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.RESULT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GRPNAME {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.GRPNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GRPNAME\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.GRPNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SNO {
                get {
                    try {
                        return ((double)(this[this.tableCultureResult.SNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SNO\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.SNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SenstivityAs {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.SenstivityAsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SenstivityAs\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.SenstivityAsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MedicineAs {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.MedicineAsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicineAs\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.MedicineAsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpperHeader {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.UpperHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpperHeader\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.UpperHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Header1 {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.Header1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Header1\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.Header1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Header2 {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.Header2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Header2\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.Header2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Footer {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.FooterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Footer\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.FooterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Strile {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.StrileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Strile\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.StrileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Specimen {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.SpecimenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Specimen\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.SpecimenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportingDate {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.ReportingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportingDate\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.ReportingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SampleDate {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.SampleDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleDate\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.SampleDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Organism {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.OrganismColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Organism\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.OrganismColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SampleType {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.SampleTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleType\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.SampleTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BloodSource {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.BloodSourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodSource\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.BloodSourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ColonyCount {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.ColonyCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColonyCount\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.ColonyCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Identification {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.IdentificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Identification\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.IdentificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportState {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.ReportStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportState\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.ReportStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Method {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.MethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Method\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.MethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TESTCODE {
                get {
                    try {
                        return ((string)(this[this.tableCultureResult.TESTCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TESTCODE\' in table \'CultureResult\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCultureResult.TESTCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEDNAME1Null() {
                return this.IsNull(this.tableCultureResult.MEDNAME1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEDNAME1Null() {
                this[this.tableCultureResult.MEDNAME1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRESULT1Null() {
                return this.IsNull(this.tableCultureResult.RESULT1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRESULT1Null() {
                this[this.tableCultureResult.RESULT1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMEDNAME2Null() {
                return this.IsNull(this.tableCultureResult.MEDNAME2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMEDNAME2Null() {
                this[this.tableCultureResult.MEDNAME2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRESULT2Null() {
                return this.IsNull(this.tableCultureResult.RESULT2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRESULT2Null() {
                this[this.tableCultureResult.RESULT2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRPNAMENull() {
                return this.IsNull(this.tableCultureResult.GRPNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRPNAMENull() {
                this[this.tableCultureResult.GRPNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSNONull() {
                return this.IsNull(this.tableCultureResult.SNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSNONull() {
                this[this.tableCultureResult.SNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSenstivityAsNull() {
                return this.IsNull(this.tableCultureResult.SenstivityAsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSenstivityAsNull() {
                this[this.tableCultureResult.SenstivityAsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMedicineAsNull() {
                return this.IsNull(this.tableCultureResult.MedicineAsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMedicineAsNull() {
                this[this.tableCultureResult.MedicineAsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpperHeaderNull() {
                return this.IsNull(this.tableCultureResult.UpperHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpperHeaderNull() {
                this[this.tableCultureResult.UpperHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeader1Null() {
                return this.IsNull(this.tableCultureResult.Header1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeader1Null() {
                this[this.tableCultureResult.Header1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeader2Null() {
                return this.IsNull(this.tableCultureResult.Header2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeader2Null() {
                this[this.tableCultureResult.Header2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFooterNull() {
                return this.IsNull(this.tableCultureResult.FooterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFooterNull() {
                this[this.tableCultureResult.FooterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStrileNull() {
                return this.IsNull(this.tableCultureResult.StrileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStrileNull() {
                this[this.tableCultureResult.StrileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableCultureResult.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableCultureResult.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecimenNull() {
                return this.IsNull(this.tableCultureResult.SpecimenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecimenNull() {
                this[this.tableCultureResult.SpecimenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportingDateNull() {
                return this.IsNull(this.tableCultureResult.ReportingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportingDateNull() {
                this[this.tableCultureResult.ReportingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSampleDateNull() {
                return this.IsNull(this.tableCultureResult.SampleDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSampleDateNull() {
                this[this.tableCultureResult.SampleDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrganismNull() {
                return this.IsNull(this.tableCultureResult.OrganismColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrganismNull() {
                this[this.tableCultureResult.OrganismColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSampleTypeNull() {
                return this.IsNull(this.tableCultureResult.SampleTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSampleTypeNull() {
                this[this.tableCultureResult.SampleTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBloodSourceNull() {
                return this.IsNull(this.tableCultureResult.BloodSourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBloodSourceNull() {
                this[this.tableCultureResult.BloodSourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColonyCountNull() {
                return this.IsNull(this.tableCultureResult.ColonyCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColonyCountNull() {
                this[this.tableCultureResult.ColonyCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdentificationNull() {
                return this.IsNull(this.tableCultureResult.IdentificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdentificationNull() {
                this[this.tableCultureResult.IdentificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportStateNull() {
                return this.IsNull(this.tableCultureResult.ReportStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportStateNull() {
                this[this.tableCultureResult.ReportStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMethodNull() {
                return this.IsNull(this.tableCultureResult.MethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMethodNull() {
                this[this.tableCultureResult.MethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTESTCODENull() {
                return this.IsNull(this.tableCultureResult.TESTCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTESTCODENull() {
                this[this.tableCultureResult.TESTCODEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Report_TableRowChangeEvent : global::System.EventArgs {
            
            private Report_TableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_TableRowChangeEvent(Report_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Report_Table2RowChangeEvent : global::System.EventArgs {
            
            private Report_Table2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_Table2RowChangeEvent(Report_Table2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_Table2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Report_HeaderRowChangeEvent : global::System.EventArgs {
            
            private Report_HeaderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_HeaderRowChangeEvent(Report_HeaderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_HeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Report_FormatRowChangeEvent : global::System.EventArgs {
            
            private Report_FormatRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_FormatRowChangeEvent(Report_FormatRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Report_FormatRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CultureResultRowChangeEvent : global::System.EventArgs {
            
            private CultureResultRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CultureResultRowChangeEvent(CultureResultRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CultureResultRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591